{
   "swagger":"2.0",
   "info":{
      "description":"Marketplace Client SDK",
      "version":"marketplace-client-sdk-2018.03.01",
      "title":"Marketplace Client SDK",
      "termsOfService":"http://wiki.coupang.net",
      "contact":{
         "name":"Seller Service Platform <seattle_seller_service@coupang.com>"
      },
      "license":{
         "name":"seattle_seller_service@coupang.com",
         "url":"seattle_seller_service@coupang.com"
      }
   },
   "host":"api-gateway.coupang.com",
   "basePath":"",
   "schemes":[
      "https"
   ],
   "securityDefinitions":{
      "api_key":{
         "type":"apiKey",
         "name":"Authorization",
         "in":"header"
      }
   },
   "security":{
      "api_key":[

      ]
   },
   "paths":{
      "/v2/providers/openapi/apis/api/v1/categorization/predict":{
         "post":{
            "summary":"Product categorization",
            "x-timeout":10000,
            "x-specId":"5bfc6817ad73b10039da14e9",
            "description":"Use user-provided information for to predict product category",
            "operationId":"doProductCategorizationUsingPOST",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfAutoCategorizationResponseDto"
                  }
               }
            },
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"autoCategorizationRequestDto",
                  "description":"autoCategorizationRequestDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/AutoCategorizationRequestDto"
                  }
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/meta/display-categories/{displacyCategoryCode}":{
         "get":{
            "summary":"노출카테고리 조회",
            "x-timeout":10000,
            "x-specId":"5758c67f2bb2f64b30e7936e",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46a5",
            "operationId":"getDisplayCategoryByCode",
            "description":"노출카테고리코드를 이용하여 전시카테고리를 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfODisplayCategory"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"노출 카테고리 코드. 카테고리코드는 숫자형으로 입력해주세요.",
                  "in":"path",
                  "name":"displacyCategoryCode"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/meta/display-categories":{
         "get":{
            "summary":"노출카테고리 전체목록 조회",
            "x-timeout":10000,
            "x-specId":"5758c67f2bb2f64b30e79369",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46a3",
            "operationId":"getDisplayCategories",
            "description":"노출카테고리 전체목록을 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfODisplayCategory"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/meta/display-categories/{displayCategoryCode}/status":{
         "get":{
            "summary":"노출카테고리가 유효한지 검사한다.",
            "x-timeout":10000,
            "x-specId":"5763aa63959bed8dac8397ca",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46a7",
            "operationId":"checkCategoryStatus",
            "description":"노출카테고리가 유효한지 검사한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfboolean"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"노출카테고리코드는 숫자형으로 입력해주세요.",
                  "in":"path",
                  "name":"displayCategoryCode"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/meta/category-related-metas/display-category-codes/{displayCategoryCode}":{
         "get":{
            "summary":"전시카테고리코드에 해당하는 카테고리관련메타(속성타입, 상품필수정보, 구비서류 등의 목록) 조회.",
            "x-timeout":10000,
            "x-specId":"5758c67f2bb2f64b30e7935f",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce469f",
            "operationId":"getCategoryRelatedMetaByDisplayCategoryCode",
            "description":"전시카테고리코드에 해당하는 카테고리아이디를 찾아서 해당 카테고리에 대한 카테고리메타(속성타입, 상품필수정보, 구비서류 등의 목록)을 조회하여 반환한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfOCategoryMeta"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"전시카테고리코드. 전시카테고리코드는 숫자형으로 입력해주세요.",
                  "in":"path",
                  "name":"displayCategoryCode"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products/external-vendor-sku-codes/{externalVendorSkuCode}":{
         "get":{
            "summary":"업체상품코드로 업체상품 목록 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e7939b",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46b9",
            "operationId":"readSellerProductsByExternalVendorSkuCode",
            "description":"업체상품코드로 업체상품 목록을 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfListOfOSellerProductListItem"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"업체상품코드",
                  "in":"path",
                  "name":"externalVendorSkuCode"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products":{
         "post":{
            "summary":"",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e79391",
            "x-getMethodTypeV2":false,
            "x-revision":"5758c6802bb2f64b30e79393",
            "operationId":"createSellerProduct",
            "description":"",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOflong"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "schema":{
                     "$ref":"#/definitions/OSellerProduct"
                  },
                  "required":true,
                  "description":"oSellerProduct",
                  "name":"oSellerProduct",
                  "in":"body"
               }
            ],
            "consumes":[
               "application/json"
            ]
         },
         "get":{
            "summary":"업체상품 목록 페이징 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e7938c",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46b3",
            "operationId":"searchSellerProduct",
            "description":"업체상품 목록을 페이징 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiPagedResultOfOSellerProductListItem"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":false,
                  "in":"query",
                  "name":"nextToken"
               },
               {
                  "format":"int32",
                  "type":"integer",
                  "required":false,
                  "in":"query",
                  "name":"maxPerPage"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":false,
                  "in":"query",
                  "name":"sellerProductId"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"sellerProductName"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":false,
                  "in":"query",
                  "name":"productId"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"vendorId"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"mdId"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"status"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"manufacture"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"brand"
               },
               {
                  "type":"string",
                  "required":false,
                  "in":"query",
                  "name":"createdAt"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":false,
                  "in":"query",
                  "name":"vendorItemId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         },
         "put":{
            "summary":"업체상품 수정",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e79396",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46b7",
            "operationId":"updateSellerProduct",
            "description":"업체상품을 수정한다. 상품은 한 개 이상의 아이템으로 구성된다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOflong"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "schema":{
                     "$ref":"#/definitions/OSellerProduct"
                  },
                  "required":true,
                  "description":"oSellerProduct",
                  "name":"oSellerProduct",
                  "in":"body"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products/{sellerProductId}/approvals":{
         "put":{
            "summary":"업체상품 승인 요청",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793af",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46c1",
            "operationId":"sendApprovalRequest",
            "description":"업체상품을 승인 요청한다. 승인 요청이 성공하면 vendorItemId가 발급된다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResult"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"sellerProductId",
                  "in":"path",
                  "name":"sellerProductId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/quantities/{quantity}":{
         "put":{
            "summary":"옵션별 수량 변경",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793cd",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46cd",
            "operationId":"changeInventoryQuantity",
            "description":"옵션별 재고 수량를 변경한다. 이 기능은 업체 상품 승인요청 후 승인이 완료되어 vendorItemId가 발급되면 사용할 수 있다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResult"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"판매승인된 옵션아이디",
                  "in":"path",
                  "name":"vendorItemId"
               },
               {
                  "format":"int32",
                  "type":"integer",
                  "required":true,
                  "description":"재고수량",
                  "in":"path",
                  "name":"quantity"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/products/items/cashback":{
         "get":{
            "summary":"Seller can use this API to get the cash back rule details.",
            "description":"Seller can use this API to get the cash back rule details.",
            "operationId":"getCashback",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"ruleId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorItemId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfProductCashBackSearchResultDto"
                  }
               }
            }
         },
         "post":{
            "summary":"Seller can use this API to set cash back rule to vendorItems.",
            "description":"Seller can use this API to set cash back rule to vendorItems. This API is applicable to vendorItems used the same cash back rule, and the allowed cash back types are RATE, FIXED and FIXED_WITH_QUANTITY.",
            "operationId":"setCashbacksV4",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"productCashBackInfoInputDto",
                  "description":"productCashBackInfoInputDto",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ProductCashBackInputDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfProductCashBackOutputDto"
                  }
               }
            }
         },
         "delete":{
            "summary":"Seller can use this API to stop the  cash back rule which applied to the corresponding vendorItemId.",
            "description":"Seller can use this API to stop the  cash back rule which applied to the corresponding vendorItemId.",
            "operationId":"stopCashbackV4",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"ruleId",
                  "in":"query",
                  "description":"ruleId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorItemId",
                  "in":"query",
                  "description":"vendorItemId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products/{sellerProductId}":{
         "get":{
            "summary":"업체상품 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793a5",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46bd",
            "operationId":"readSellerProduct",
            "description":"업체상품을 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfOSellerProduct"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"sellerProductId",
                  "in":"path",
                  "name":"sellerProductId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         },
         "delete":{
            "summary":"업체상품 삭제",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793aa",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46bf",
            "operationId":"deleteSellerProduct",
            "description":"업체상품을 삭제한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResult"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"sellerProductId",
                  "in":"path",
                  "name":"sellerProductId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/sales/stop":{
         "put":{
            "summary":"옵션별 판매여부 변경(판매중지)",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793d7",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2d012ef0242dce46d1",
            "operationId":"stopSelling",
            "description":"옵션별 판매여부를 번경한다 (판매중지). 이 기능은 업체 상품 승인요청 후 승인이 완료되어 vendorItemId가 발급되면 사용할 수 있다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResult"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"판매승인된 옵션아이디",
                  "in":"path",
                  "name":"vendorItemId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/sales/resume":{
         "put":{
            "summary":"옵션별 판매여부 변경(판매재개)",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793d2",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46cf",
            "operationId":"resumeSelling",
            "description":"옵션별 판매여부를 변경한다 (판매재개). 이 기능은 업체 상품 승인요청 후 승인이 완료되어 vendorItemId가 발급되면 사용할 수 있다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResult"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"판매승인된 옵션아이디",
                  "in":"path",
                  "name":"vendorItemId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/inventories":{
         "get":{
            "summary":"옵션별 수량/가격/상태 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793c3",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46c9",
            "operationId":"getInventoryInformation",
            "description":"옵션별 수량/가격/상태를 조회한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfOSellerProductItemStatus"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"판매승인된 옵션아이디",
                  "in":"path",
                  "name":"vendorItemId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/original-prices/{originalPrice}":{
         "put":{
            "summary":"Change original price",
            "x-timeout":10000,
            "x-specId":"5858d6732255abd2ac19eeed",
            "x-getMethodTypeV2":false,
            "x-revision":"5858d6732255abd2ac19eef0",
            "operationId":"changeOriginalPriceUsingPUT",
            "description":"\nSellers can use this api to change the original price of vendor item by vendorItemId  when vendorItemId is  generated after vendor product is approved.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfstring"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"vendorItemId approved for sale",
                  "in":"path",
                  "name":"vendorItemId"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"original price",
                  "in":"path",
                  "name":"originalPrice"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products/time-frame":{
         "get":{
            "summary":"업체상품 목록 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793a0",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46bb",
            "operationId":"readSellerProducts",
            "description":"업체상품 목록을 생성일시 기준으로 조회한다. 생성시작일시 ~ 생성종료일시의 시간간격은 1H을 초과할 경우 예외처리합니다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfListOfOSellerProductListItem"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"업체코드",
                  "in":"query",
                  "name":"vendorId"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"생성시작일시. \"yyyy-MM-dd'T'HH:mm:ss\" 형식의 일시",
                  "in":"query",
                  "name":"createdAtFrom"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"생성종료일시. \"yyyy-MM-dd'T'HH:mm:ss\" 형식의 일시",
                  "in":"query",
                  "name":"createdAtTo"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/vendor-items/{vendorItemId}/prices/{price}":{
         "put":{
            "summary":"옵션별 가격 변경",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793c8",
            "x-getMethodTypeV2":false,
            "x-revision":"58942d12215fffbc06cde04d",
            "operationId":"changeSalePriceUsingPUT",
            "description":"옵션별 가격을 변경한다. 이 기능은 업체 상품 승인요청 후 승인이 완료되어 vendorItemId가 발급되면 사용할 수 있다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiResultOfstring"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"판매승인된 옵션아이디",
                  "in":"path",
                  "name":"vendorItemId"
               },
               {
                  "format":"int64",
                  "type":"integer",
                  "required":true,
                  "description":"가격",
                  "in":"path",
                  "name":"price"
               },
               {
                  "name": "forceSalePriceUpdate",
                  "in": "query",
                  "description": "가격변경 비율 제한 정책 비 적용 여부",
                  "required": false,
                  "type": "boolean",
                  "default": false
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/meta/products":{
         "get":{
            "summary":"노출상품 목록 페이징 조회",
            "x-timeout":10000,
            "x-specId":"5758c67f2bb2f64b30e7937d",
            "x-getMethodTypeV2":false,
            "x-revision":"5768dc2c012ef0242dce46ad",
            "operationId":"searchExistingProducts",
            "description":"노출상품 목록을 상품명으로 페이징 조회를 한다.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiPagedResultOfOProduct"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"노출상품명.",
                  "in":"query",
                  "name":"productName"
               },
               {
                  "format":"int32",
                  "default":1,
                  "type":"integer",
                  "required":false,
                  "description":"페이지. 기본값 1입니다. 다음 페이지를 호출하기 위한 키값. 첫 페이지 호출시에는 넣지 않거나 '1' 입력",
                  "in":"query",
                  "name":"nextToken"
               },
               {
                  "format":"int32",
                  "default":10,
                  "type":"integer",
                  "required":false,
                  "description":"페이지당건수. 기본값 10입니다.",
                  "in":"query",
                  "name":"maxPerPage"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/seller_api/apis/api/v1/marketplace/seller-products/{sellerProductId}/histories":{
         "get":{
            "summary":"업체상품 상태변경이력 조회",
            "x-timeout":10000,
            "x-specId":"5758c6802bb2f64b30e793b4",
            "x-getMethodTypeV2":false,
            "x-revision":"58942c86a014c15f3689692d",
            "operationId":"readSellerProductHistory",
            "description":"업체상품아이디로 상태 변경 이력을 조회한다. Result list is sorted by 일시.",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "responses":{
               "200":{
                  "schema":{
                     "$ref":"#/definitions/OpenApiPagedResultOfOSellerProductStatusHistory"
                  },
                  "description":"OK"
               }
            },
            "parameters":[
               {
                  "type":"string",
                  "required":true,
                  "description":"Vendor ID",
                  "in":"header",
                  "name":"X-Requested-By"
               },
               {
                  "type":"string",
                  "required":true,
                  "description":"sellerProductId",
                  "in":"path",
                  "name":"sellerProductId"
               }
            ],
            "consumes":[
               "application/json"
            ]
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/ordersheets":{
         "get":{
            "summary":"query order list by separate delivery status and page in days",
            "description":"query order list in days",
            "operationId":"getOrderSheetsByVendorId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtFrom",
                  "in":"query",
                  "description":"start time(yyyy-MM-ddThh:mm)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtTo",
                  "in":"query",
                  "description":"end time(yyyy-MM-ddThh:mm)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"status",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"page size",
                  "required":false,
                  "type":"integer",
                  "default":50,
                  "format":"int32"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"searchType",
                  "in":"query",
                  "description":"search type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfListOfOrderSheetDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/ordersheets/acknowledgement":{
         "patch":{
            "summary":"상품준비중 상태 변경",
            "description":"ordersheet의 상태를 \"상품준비중\" 상태로 변경한다.\n상태변경을 요청한 ordersheet 중 취소건이 있으면 Partial Error를 리턴한다.\n즉, 요청한 전체 ordersheet가 성공해야 Success.",
            "operationId":"applyPrepareShipmentStatus",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"prepareShipmentReqDto",
                  "description":"prepareShipmentReqDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/PrepareShipmentReqDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfOrderSheetResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/ordersheets/{shipmentBoxId}":{
         "get":{
            "summary":"발주서 단건 조회V2 (분리배송적용)",
            "description":"발주서 단건을 조회한다.",
            "operationId":"getOrderSheetByShipmentBoxId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"shipmentBoxId",
                  "in":"path",
                  "description":"shipmentBoxId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfOrderSheetDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/ordersheets/{shipmentBoxId}/history":{
         "get":{
            "summary":"발주건 배송상태 히스토리 조회",
            "description":"특정 발주건에 대한 배송상태 히스토리를 조회",
            "operationId":"getDeliveryHistoriesByShipmentBoxId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"shipmentBoxId",
                  "in":"path",
                  "description":"shipmentBoxId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfDeliveryHistoryDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/{orderId}/ordersheets":{
         "get":{
            "summary":"주문번호로 발주서 단건 조회",
            "description":"주문번호로 발주서 단건을 조회한다.",
            "operationId":"getOrderSheetByOrderId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"path",
                  "description":"orderId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfListOfOrderSheetDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/invoices":{
         "post":{
            "summary":"배송지시 상태 변경 V2 (분리배송적용)",
            "description":"ordersheet의 상태를 \"배송지시\" 상태로 변경한다.",
            "operationId":"applyInvoicesUpload",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"uploadInvoiceReqDtoV2",
                  "description":"uploadInvoiceReqDtoV2",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UploadInvoiceReqDtoV2"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfOrderSheetResponseDto"
                  }
               },
               "400":{
                  "description":"Bad Request"
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests/{receiptId}/stoppedShipment":{
         "patch":{
            "summary":"출고중지 완료 처리",
            "description":"출고중지완료 상태로 변경한다.",
            "operationId":"doStopRelease",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"receiptId",
                  "in":"path",
                  "description":"반품 ID",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"path vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"releaseStopDto",
                  "description":"releaseStopDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ReleaseStopDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests/{receiptId}/completedShipment":{
         "patch":{
            "summary":"이미출고 처리",
            "description":"출고중지요청건에 대해 이미출고 처리를 할 수 있다.",
            "operationId":"doAlreadyRelease",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"receiptId",
                  "in":"path",
                  "description":"반품 ID",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"path vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"releaseInfoDto",
                  "description":"releaseInfoDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ReleaseInfoDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/{orderId}/refunds":{
         "post":{
            "summary":"파트너 강제 취소",
            "description":"결제 완료 상태의 주문건을 취소한다.",
            "operationId":"cancelOrder",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"path",
                  "description":"orderId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"csCancelRequestDto",
                  "description":"csCancelRequestDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CsCancelRequestDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfCSReceiptResult"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/exchangeRequests":{
         "get":{
            "summary":"get exchange information",
            "description":"get exchange information",
            "operationId":"getExchangesByVendorId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtFrom",
                  "in":"query",
                  "description":"from datetime(createdAtFrom : yyyy-MM-ddTHH:mm:ss)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtTo",
                  "in":"query",
                  "description":"to datetime(createdAtTo : yyyy-MM-ddTHH:mm:ss)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"status",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"order ID",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"maxPerPage",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PagedResponseDtoOfListOfExchangeDtoV1"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/exchangeRequests/{exchangeId}/receiveConfirmation":{
         "patch":{
            "summary":"new API Seller use this API to confirm that they have received the exchange product which are sent by customer.",
            "description":"new API Seller use this API to confirm that they have received the exchange product which are sent by customer.",
            "operationId":"confirmReturnDeliveryDoneByExchangeId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendorId",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"confirmContent",
                  "description":"confirmContent",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ConfirmContent"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"path vendor Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"exchangeId",
                  "in":"path",
                  "description":"path receipt Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/exchangeRequests/{exchangeId}/rejection":{
         "patch":{
            "summary":"Vendor reject to do exchange.",
            "description":"Vendor reject to do exchange.",
            "operationId":"cancelExchange",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"exchangeId",
                  "in":"path",
                  "description":"exchangeId ID",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"exchangeCancelDto",
                  "description":"exchangeCancelDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ExchangeCancelDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"path vendor Id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/exchangeRequests/{exchangeId}/invoices":{
         "post":{
            "summary":"Create new order for exchanging.",
            "description":"Create new order when seller send new good to customer for exchanging.",
            "operationId":"saveInvoice",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"exchangeId",
                  "in":"path",
                  "description":"exchange Id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"path vendor Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor Id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"exchangeInvoicesDtos",
                  "description":"exchangeInvoicesDtos",
                  "required":true,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ExchangeInvoicesDto"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests":{
         "get":{
            "summary":"Seller can use this API to query the return detail info based on different partner confirm progress status in minutes level. ",
            "description":"Seller can use this API to query the return detail info based on different partner confirm progress status in minutes level. ",
            "operationId":"getReturnRequestedListByVendorId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtFrom",
                  "in":"query",
                  "description":"createdAtFrom",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createdAtTo",
                  "in":"query",
                  "description":"createdAtTo",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"status",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"orderId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"maxPerPage",
                  "required":false,
                  "type":"integer",
                  "default":50,
                  "format":"int32"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"searchType",
                  "in":"query",
                  "description":"search type",
                  "required":false,
                  "type":"string"
               },
               {
                  "name": "cancelType",
                  "in": "query",
                  "description": "cancel type: CANCEL or RETURN. default tor RETURN",
                  "required": false,
                  "type": "string",
                  "default": "RETURN"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfListOfReturnDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests/{receiptId}":{
         "get":{
            "summary":"Seller can use this API to query the return detail info by receiptId. ",
            "description":"Seller can use this API to query the return detail info by receiptId. ",
            "operationId":"getReturnRequestedListByReceiptId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"receiptId",
                  "in":"path",
                  "description":"receiptId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfReturnDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests/{receiptId}/receiveConfirmation":{
         "patch":{
            "summary":"Seller can use this API to check if the collected goods is ok.",
            "description":"Seller can use this API to check if the collected goods is ok.",
            "operationId":"returnDeliveryDoneConfirmation",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"receiptId",
                  "in":"path",
                  "description":"receiptId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"warehouseCheckDto",
                  "description":"warehouseCheckDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/WarehouseCheckDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnRequests/{receiptId}/approval":{
         "patch":{
            "summary":"Seller can use this API to approve the return request",
            "description":"Seller can use this API to approve the return request",
            "operationId":"confirmCancelByPartnerByReceiptId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"receiptId",
                  "in":"path",
                  "description":"receiptId",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"returnApprovalDto",
                  "description":"returnApprovalDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ReturnApprovalDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/onlineInquiries":{
         "get":{
            "summary":"Query questions/answers between customer and seller.",
            "description":"Query questions/answers between customer and seller. Seller can use this API to query the on sale products' consultations raised by customers.",
            "operationId":"getCustomerInquiriesByVendorId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"inquiryStartAt",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"inquiryEndAt",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"answeredType",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorItemId",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfPagedListOfCSCustomerInquiryDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/onlineInquiries/{inquiryId}/replies":{
         "post":{
            "summary":"Seller can use this API to reply the consultations raised by customers.",
            "description":"Seller can use this API to reply the consultations raised by customers. Note : One API call can only reply one question. Before using this api to reply corresponding question, seller need to use the customer service inquiry api to get corresponding 'inquiryId'–question Id.",
            "operationId":"addCommentToInquiry",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"inquiryId",
                  "in":"path",
                  "description":"inquiry ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendorId",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"cSAddComment",
                  "description":"cSAddComment",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CSAddComment"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/callCenterInquiries":{
         "get":{
            "summary":"Query questions/answers between coupang and seller.",
            "description":"Seller can use this API to query particular products' consultations and replies. (Consumers raised these questions directly to coupang via coupang customer center or seller's call center).",
            "operationId":"getInquiriesByVendor",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"inquiryStartAt",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"inquiryEndAt",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"partnerCounselingStatus",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorItemId",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfPagedListOfCSCoupangInquiryDTO"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/callCenterInquiries/{inquiryId}/replies":{
         "post":{
            "summary":"Seller can use this API to reply the consultations",
            "description":"Seller can use this API to reply the consultations (The consultations were directly raised by consumers to coupang via coupang customer center or seller's call center).",
            "operationId":"replyInquiries",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"inquiryId",
                  "in":"path",
                  "description":"inquiry ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"csCoupangReplyCondition",
                  "description":"csCoupangReplyCondition",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CSCoupangReplyCondition"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/callCenterInquiries/{inquiryId}/confirms":{
         "post":{
            "summary":"Seller can use this API to confirms the consultations",
            "description":"Seller can use this API to confirms the consultations (The consultations were directly raised by consumers to coupang via coupang customer center or seller's call center).",
            "operationId":"confirmInquiries",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"inquiryId",
                  "in":"path",
                  "description":"inquiry ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"csCoupangConfirmCondition",
                  "description":"csCoupangConfirmCondition",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CSCoupangConfirmCondition"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/retroactiveFees":{
         "get":{
            "summary":"Seller can use this API to get settlement goods fee corrections. Fee correction is the adjustment fee happened between Coupang and Seller.",
            "description":" Fee correction is the adjustment fee happened between Coupang and Seller.",
            "operationId":"getGoodsFeeCorrections",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"pathVendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recognitionDate",
                  "in":"query",
                  "description":"Date (yyyy-MM-dd)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken(start index, 0 on first call)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"Number of calls per page (default = 50, min = 1, max = 50)",
                  "required":false,
                  "type":"integer",
                  "default":50,
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ApiResponseDtoOfListOfGoodsFeeCorrectionOutputDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/salesDetails":{
         "get":{
            "summary":"Seller can use this API to get settlement goods sales fee. Settlement goods sales fee is equal to order details, including payment amount, delivery amount, service fee and service fee VAT etc.",
            "description":"Seller can use this API to get settlement goods sales fee. Settlement goods sales fee is equal to order details, including payment amount, delivery amount, service fee and service fee VAT etc.",
            "operationId":"getGoodsSalesByVendor",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"pathVendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recognitionDate",
                  "in":"query",
                  "description":"Date (yyyy-MM-dd)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken(start index, 0 on first call)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"Number of calls per page (default = 50, min = 1, max = 50)",
                  "required":false,
                  "type":"integer",
                  "default":50,
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ApiResponseDtoOfListOfGoodsSalesOutputDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/settlementDetails":{
         "get":{
            "summary":"Seller can use this API to get order paiditems detail",
            "description":"Seller can use this API to get order snapshot specified amount. Including cancel delivery price, cancel remote area delivery price, estimated settlement amount amount, purchase confirm amount and paid price etc.",
            "operationId":"getOrderSnapshotDetailByVendorId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"VendorId 업체ID",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorItemId",
                  "in":"query",
                  "description":"vendorItemId ",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"shipmentStatusCode",
                  "in":"query",
                  "description":"shipmentStatusCode ",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"maxPerPage 리턴되는 데이터 수 (기본 10개)",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken 다음 결과를 패치하기 위한 키: loop 를 돌리는데 사용 합니다. 처음 호출 시 null 을 사용합니다.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"startTime",
                  "in":"query",
                  "description":"starTime 결제일-검색시작일, yyyy-MM-dd HH:mm-ss",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"endTime",
                  "in":"query",
                  "description":"endTime 결제일-검색종료일, yyyy-MM-dd HH:mm-ss",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ApiNextResponseDtoOfListOfOrderSnapshotViewDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/{orderId}/settlementDetails":{
         "get":{
            "summary":"Seller can use this API to get order paiditems detail",
            "description":"Seller can use this API to get order snapshot detail. Including cancel amount, paid amount, purchase fee and estimated settlement fee etc.",
            "operationId":"getOrderSnapshotDetailByOrderId",
            "x-timeout":10000,
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"path",
                  "description":"orderId ",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"nextToken",
                  "in":"query",
                  "description":"nextToken ",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ApiNextResponseDtoOfListOfOrderSnapshotViewDto"
                  }
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/budgets":{
         "get":{
            "summary":"업체의 각 계약서별로 할인 분담율 및 예산 조회",
            "description":"업체의 각 계약서별로 예산월에 속한 예산 및 셀러의 할인분담율을 제공한다.",
            "operationId":"getSellerInfo",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"contractId",
                  "in":"query",
                  "description":"업체의 계약서 아이디",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"targetMonth",
                  "in":"query",
                  "description":"조회하고자 하는 예산월 : yyyy-MM",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfBudgetStateResponse"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/contract/list":{
         "get":{
            "summary":"업체의 계약 정보 목록 조회",
            "description":"계약기반, 자유계약기반 타입으로 구분 조회됨.",
            "operationId":"getContracts",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfContractOpenAPIV2Dto"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/contract":{
         "get":{
            "summary":"업체의 계약 정보 조회",
            "description":"계약기반, 자유계약기반 타입으로 구분 조회됨.",
            "operationId":"getContract",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"contractId",
                  "in":"query",
                  "description":"new 계약서 ID v1 contractID와 호환 안됨",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfContractOpenAPIV2Dto"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/contract/create/non_contract_info":{
         "post":{
            "summary":"업체의 계약서 정보에 자유계약 정보가 없는경우 자유계약 정보를 생성한다.",
            "description":"업체별로 한개의 자유계약정보를 가지고 더이상 생성하지 않음. 결과로 생성된 계약정보 반환함.",
            "operationId":"createNonContractInfo",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfContractOpenAPIV2Dto"
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/coupon":{
         "get":{
            "summary":"프로모션 쿠폰 조회",
            "description":"프로모션 쿠폰 1건을 조회합니다. 타업체 쿠폰은 조회할 수 없습니다.",
            "operationId":"getCouponByVendor",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"query",
                  "description":"couponId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfCouponInfoOpenAPIV2Response"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         },
         "post":{
            "summary":"프로모션 쿠폰 등록",
            "description":"new ContractId 기반 프로모션 쿠폰 등록 V1 에서 조회되는 ContractId와 연동 되지 않음.",
            "operationId":"createCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"request",
                  "description":"request",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CouponCreateRequestOpenAPIV2Form"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfRequested"
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/coupons":{
         "get":{
            "summary":"쿠폰 정보 조회",
            "operationId":"getCouponsByVendor",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"쿠폰상태 (STANDBY,APPLIED(*),PAUSED,EXPIRED) ",
                  "required":false,
                  "type":"string",
                  "default":"APPLIED",
                  "enum":[
                     "STANDBY",
                     "APPLIED",
                     "PAUSED",
                     "DETACHED",
                     "EXPIRED"
                  ]
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Results page you want to retrieve (0..N)",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"Number of records per page",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "collectionFormat":"multi"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfCouponInfoOpenAPIV2Response"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v2/vendors/{vendorId}/{orderId}/coupons":{
         "get":{
            "summary":"coupon find",
            "operationId":"getCouponsByOrder",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"path",
                  "description":"주문 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfOrderCouponInfoV2Response"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/coupons/{couponId}":{
         "put":{
            "summary":"쿠폰을 파기합니다.",
            "description":"쿠폰을 파기합니다.",
            "operationId":"expireOfCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"action",
                  "in":"query",
                  "required":true,
                  "type":"string",
                  "default":"expire",
                  "enum":[
                     "expire"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfRequested"
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/coupons/{couponId}/items":{
         "get":{
            "summary":"쿠폰상태별로 쿠폰아이템찾기 ",
            "operationId":"getItemsByCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"status",
                  "in":"query",
                  "description":"쿠폰상태 (STANDBY,APPLIED(*),PAUSED,EXPIRED) ",
                  "required":true,
                  "type":"string",
                  "default":"APPLIED",
                  "enum":[
                     "STANDBY",
                     "APPLIED",
                     "PAUSED",
                     "DETACHED",
                     "EXPIRED"
                  ]
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Results page you want to retrieve (0..N)",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"Number of records per page",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "collectionFormat":"multi"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfCouponItemInfoResponse"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         },
         "post":{
            "summary":"couponItems add to the coupon",
            "operationId":"addItemsToCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"vendorItems",
                  "description":"The size of vendorItemIds should not exceed 10000.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/VendorItemIdBundle"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfRequested"
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         },
         "put":{
            "summary":"아아템의 쿠폰 파기",
            "operationId":"expireOfCouponItem",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"vendorItems",
                  "description":"The size of vendorItemIds should not exceed 10000.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/VendorItemIdBundle"
                  }
               },
               {
                  "name":"action",
                  "in":"query",
                  "required":true,
                  "type":"string",
                  "default":"expire",
                  "enum":[
                     "expire"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfRequested"
                  }
               },
               "201":{
                  "description":"Created"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/coupons/{couponId}/items/{couponItemId}":{
         "get":{
            "summary":"couponItemId 로 쿠폰아이템찾기 ",
            "operationId":"getItemByCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"couponItemId",
                  "in":"path",
                  "description":"쿠폰아이템 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"type",
                  "in":"query",
                  "required":true,
                  "type":"string",
                  "default":"couponItemId",
                  "enum":[
                     "couponItemId"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfCouponItemInfoResponse"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/coupons/{couponId}/items/{vendorItemId}":{
         "get":{
            "summary":"vendorItemId 로 쿠폰아이템찾기 ",
            "operationId":"getItemByVendorItemIdAndCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"쿠폰 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"vendorItemId",
                  "in":"path",
                  "description":"벤덩아이템 아이디",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"type",
                  "in":"query",
                  "required":true,
                  "type":"string",
                  "default":"vendorItemId",
                  "enum":[
                     "vendorItemId"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfCouponItemInfoResponse"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/fms/apis/api/v1/vendors/{vendorId}/requested/{requestedId}":{
         "get":{
            "summary":"요청결과 확인하기  ",
            "operationId":"getItemByRequestedId",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"requestedId",
                  "in":"path",
                  "description":"요청아이디",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfRequestedStatus"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/outboundShippingCenters":{
         "post":{
            "summary":"Register the outbound shipping place.",
            "operationId":"createOutboundShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"ShippingPlaceDetailDto",
                  "description":"ShippingPlaceDetailDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShippingPlaceDetailDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         },
         "get":{
            "summary":"get outbound shipping places by outboundShippingPlaceCodes",
            "description":"get outbound shipping places by outboundShippingPlaceCodes",
            "operationId":"getOutboundShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendor ID",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"searchType",
                  "in":"query",
                  "description":"search type",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"outboundShippingPlaceCodes",
                  "in":"query",
                  "description":"outboundShippingPlaceCode,max = 100",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "description":"pageNum",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "description":"pageSize",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfPagedListOfOutboundInquiryReturnDTO"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/outboundShippingCenters/{outboundShippingPlaceCode}":{
         "put":{
            "summary":"Modify the outbound shipping place.",
            "operationId":"updateOutboundShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"path",
                  "name":"outboundShippingPlaceCode",
                  "description":"outbound shippingplace code",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"ShippingPlaceDetailDto",
                  "description":"ShippingPlaceDetailDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShippingPlaceDetailDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnShippingCenters":{
         "post":{
            "summary":"Add return shipment address.",
            "operationId":"createReturnShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"ShippingPlaceDetailDto",
                  "description":"ShippingPlaceDetailDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShippingPlaceDetailDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         },
         "get":{
            "summary":"Inquiry return shipment addresses with pagination.",
            "description":"Inquiry return shipment addresses with pagination.",
            "operationId":"getReturnShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendor ID",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "description":"pageNum",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "description":"pageSize",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfPagedListOfShippingPlaceResponseReturnDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnShippingCenters/{returnCenterCode}":{
         "put":{
            "summary":"Modify return shipment address.",
            "operationId":"updateReturnShippingCenter",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 아이디",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"path",
                  "name":"returnCenterCode",
                  "description":"shippingPlace ID",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"ShippingPlaceDetailDto",
                  "description":"ShippingPlaceDetailDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ShippingPlaceDetailDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfSimpleResultDto"
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/coupon-items":{
         "put":{
            "summary":"Add vendor items to coupons",
            "description":"Add items to existing coupons",
            "operationId":"addVendorItemsToDownloadableCoupons",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"couponItemRequest",
                  "description":"couponItemRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CouponItemRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ResponseOfCouponItemResponse"
                     }
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/coupons":{
         "get":{
            "summary":"Get list of coupon by search criteria",
            "description":"Get coupons based on search criteria",
            "operationId":"searchDownloadableCoupons",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"contractId",
                  "in":"query",
                  "description":"contractId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"couponName",
                  "in":"query",
                  "description":"couponName",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createDateStartAt",
                  "in":"query",
                  "description":"createDateStartAt",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"createDateEndAt",
                  "in":"query",
                  "description":"createDateEndAt",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"couponType",
                  "in":"query",
                  "description":"couponType",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "INSTANCE",
                     "DOWNLOAD"
                  ]
               },
               {
                  "name":"couponStatuses",
                  "in":"query",
                  "description":"couponStatuses",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "STANDBY",
                        "APPLIED",
                        "DETACHED",
                        "PAUSED",
                        "PAUSING",
                        "EXPIRED",
                        "EXPIRING"
                     ]
                  },
                  "collectionFormat":"multi",
                  "enum":[
                     "STANDBY",
                     "APPLIED",
                     "DETACHED",
                     "PAUSED",
                     "PAUSING",
                     "EXPIRED",
                     "EXPIRING"
                  ]
               },
               {
                  "name":"appliedItemStatuses",
                  "in":"query",
                  "description":"appliedItemStatuses",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"couponIds",
                  "in":"query",
                  "description":"couponIds",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"integer",
                     "format":"int64"
                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"page",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"size",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PagedResponseOfCouponDetails"
                  }
               }
            }
         },
         "post":{
            "summary":"Create coupon",
            "description":"Create coupon in STANDBY mode with policies",
            "operationId":"createDownloadableCoupon",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"createCouponRequest",
                  "description":"createCouponRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CreateCouponRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/CreateCouponResponse"
                  }
               }
            }
         },
         "delete":{
            "summary":"Delete coupons",
            "description":"Delete multiple coupons",
            "operationId":"deleteCoupons",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"deleteCouponRequest",
                  "description":"deleteCouponRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/DeleteCouponRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ResponseOfDeleteCouponResponse"
                     }
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/coupons/expire":{
         "post":{
            "summary":"Expire coupons",
            "description":"Expire multiple coupons",
            "operationId":"expireDownloadableCoupons",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"expireCouponRequest",
                  "description":"expireCouponRequest",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ExpireCouponRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ResponseOfExpireCouponResponse"
                     }
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/coupons/transactionStatus":{
         "get":{
            "summary":"Get status of transaction id",
            "description":"Get status of already submitted request by transactionId",
            "operationId":"GetTransactionStatus",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"requestTransactionId",
                  "in":"query",
                  "description":"requestTransactionId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/TransactionStatusResponseOfCouponTransactionStatusResponse"
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/coupons/{couponId}":{
         "get":{
            "summary":"Get coupon by couponId",
            "description":"Get coupon based on couponId",
            "operationId":"getDownloadableCouponById",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"couponId",
                  "in":"path",
                  "description":"couponId",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/GetCouponResponse"
                  }
               }
            }
         }
      },
       "/v2/providers/openapi/apis/api/v1/revenue-history":{
         "get":{
            "summary":"Get revenue history",
            "description":"Detailed vendor revenue history",
            "operationId":"getRevenueHistory",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendorIdInHeader",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"query",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recognitionDateFrom",
                  "in":"query",
                  "description":"recognitionDateFrom (yyyy-MM-dd)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recognitionDateTo",
                  "in":"query",
                  "description":"recognitionDateTo (yyyy-MM-dd)",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"token",
                  "in":"query",
                  "description":"token",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"maxPerPage",
                  "in":"query",
                  "description":"page size (default=50, min=1, max=50)",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/OpenapiResponseOfListOfRevenueHistoryApiDto"
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/settlement-histories":{
         "get":{
            "summary":"settlement histories",
            "description":"settlement histories by revenueRecognitionYearMonth",
            "operationId":"getSettlementHistories",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"header",
                  "description":"Header : X-Requested-By",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"revenueRecognitionYearMonth",
                  "in":"query",
                  "description":"revenueRecognitionYearMonth (yyyy-MM)",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/SettlementHistoryDto"
                     }
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnWithdrawList":{
         "post":{
            "summary":"반품 철회 이력",
            "description":"반품 철회 이력",
            "operationId":"getReturnWithdrawRequestedList",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"returnWithdrawReqDto",
                  "description":"returnWithdrawReqDto",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ReturnWithdrawReqDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfListOfReturnWithdrawDto"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/returnWithdrawRequests":{
         "get":{
            "summary":"반품 철회 이력 기간별 조회",
            "description":"반품 철회 이력 기간별 조회",
            "operationId":"getReturnWithdrawRequestsByPageV4",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"dateFrom",
                  "in":"query",
                  "description":"dateFrom",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"dateTo",
                  "in":"query",
                  "description":"dateTo",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sizePerPage",
                  "in":"query",
                  "description":"sizePerPage",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"pageIndex",
                  "in":"query",
                  "description":"pageIndex",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "format":"int32"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PagedResponseDtoWithPageIndexOfListOfReturnWithdrawDto"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/orders/updateInvoices":{
         "post":{
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "summary":"Update invoice number of the shipping box of an existing order",
            "description":"1. The invoice can only be update in the following order status: departure(C), delivering(D), final_delivery(E), non-trackable(Z);2. Once the invoice is updated, the order status will be changed to departure(C);3. The invoice update MUST be applied to all vendorItems in the same shipping box",
            "operationId":"updateInvoices",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"vendor id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"invoiceReqDto",
                  "description":"invoiceReqDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/InvoiceReqDto"
                  }
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfOrderSheetResponseDto"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/return-exchange-invoices/manual":{
         "post":{
            "summary":"수기 송장 등록(반품/교환)",
            "description":"반품/교환 송장을 수기로 등록한다.",
            "operationId":"createInvoiceNumber",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"업체 ID",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"invoiceNumberCreateDto",
                  "description":"invoiceNumberCreateDto",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/InvoiceNumberCreateDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfInvoiceNumberCreateDto"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v4/vendors/{vendorId}/completeLongTermUndelivery":{
         "post":{
            "summary":"장기미배송 수동 배송완료 처리",
            "description":"장기미배송 수동 배송완료 처리",
            "operationId":"completeDelivery",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"vendorId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-Requested-By",
                  "in":"header",
                  "description":"X-Requested-By",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"deliveryReqDto",
                  "description":"deliveryReqDto",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/DeliveryReqDto"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfboolean"
                  }
               }
            }
         }
      },
      "/v2/providers/marketplace_openapi/apis/api/v1/vendor/shipping-place/outbound":{
         "get":{
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "summary":"Get outbound shipping place",
            "description":"Get outbound shipping place",
            "operationId":"getOutboundShippingPlace",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"header",
                  "description":"vendor id by header",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "description":"page number up to 50",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "format":"int32"
               },
               {
                  "name":"pageSize",
                  "in":"query",
                  "description":"page size",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"placeCodes",
                  "in":"query",
                  "description":"place ids upto 50",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"integer",
                     "format":"int64"
                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"placeNames",
                  "in":"query",
                  "description":"place names upto 50",
                  "required":false,
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "collectionFormat":"multi"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PagedResponseOfOutboundInquiryReturn"
                  }
               }
            }
         }
      },
      "/v2/providers/openapi/apis/api/v5/vendors/{vendorId}/orders/{orderId}/cancel":{
         "post":{
            "summary":"상품 취소 API(v5)",
            "description":"결제완료/상품준비중 상태의 상품을 취소합니다.",
            "operationId":"cancelOrderV5",
            "security":[
               {
                  "api_key":[

                  ]
               }
            ],
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json",
               "*/*"
            ],
            "parameters":[
               {
                  "name":"vendorId",
                  "in":"path",
                  "description":"업체 ID",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"orderId",
                  "in":"path",
                  "description":"주문 ID",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "in":"body",
                  "name":"cancelRequestDtoV5",
                  "description":"cancelRequestDtoV5",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CancelRequestDtoV5"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/ResponseDtoOfCancelApiResponseDtoV5"
                  }
               }
            }
         }
      }
   },
   "definitions":{
      "PagedResponseOfOutboundInquiryReturn":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OutboundInquiryReturn"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "OutboundInquiryReturn":{
         "type":"object",
         "properties":{
            "createDate":{
               "type":"string"
            },
            "outboundShippingPlaceCode":{
               "type":"integer",
               "format":"int64"
            },
            "placeAddresses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PlaceAddressDto"
               }
            },
            "remoteInfos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RemoteInfoDto"
               }
            },
            "shippingPlaceName":{
               "type":"string"
            },
            "usable":{
               "type":"boolean"
            }
         }
      },
      "ResponseDtoOfInvoiceNumberCreateDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/InvoiceNumberCreateDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "InvoiceNumberCreateDto":{
         "type":"object",
         "properties":{
            "deliveryCompanyCode":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "invoiceNumberId":{
               "type":"integer",
               "format":"int64"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "regNumber":{
               "type":"string"
            },
            "returnDeliveryId":{
               "type":"integer",
               "format":"int64"
            },
            "returnExchangeDeliveryType":{
               "type":"string"
            }
         }
      },
      "ReturnWithdrawReqDto":{
         "type":"object",
         "properties":{
            "cancelIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "ResponseDtoOfListOfReturnWithdrawDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnWithdrawDto"
               }
            },
            "message":{
               "type":"string"
            }
         }
      },
      "ReturnWithdrawDto":{
         "type":"object",
         "properties":{
            "cancelId":{
               "type":"integer",
               "format":"int64"
            },
            "createdAt":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "refundDeliveryDuty":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            },
            "vendorItemIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "AutoCategorizationRequestDto":{
         "type":"object",
         "properties":{
            "attributes":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               },
               "x-cag-map-key-type":"java.lang.String"
            },
            "brand":{
               "type":"string"
            },
            "productDescription":{
               "type":"string"
            },
            "productName":{
               "type":"string"
            },
            "sellerSkuCode":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfAutoCategorizationResponseDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/AutoCategorizationResponseDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "AutoCategorizationResponseDto":{
         "type":"object",
         "properties":{
            "autoCategorizationPredictionResultType":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "FAILURE",
                  "INSUFFICIENT_INFORMATION"
               ]
            },
            "comment":{
               "type":"string"
            },
            "predictedCategoryId":{
               "type":"string"
            },
            "predictedCategoryName":{
               "type":"string"
            }
         }
      },
      "OpenApiResultOfListOfOSellerProductListItem":{
         "title":"OpenApiResultOfListOfOSellerProductListItem",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OSellerProductListItem"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OCertification":{
         "title":"OCertification",
         "properties":{
            "required":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "dataType":{
               "type":"string"
            },
            "certificationType":{
               "type":"string"
            }
         }
      },
      "OpenApiResultOfODisplayCategory":{
         "title":"OpenApiResultOfODisplayCategory",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "$ref":"#/definitions/ODisplayCategory"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OSellerProductItem":{
         "title":"OSellerProductItem",
         "properties":{
            "vendorItemId":{
               "format":"int64",
               "type":"integer"
            },
            "unitCount":{
               "format":"int32",
               "type":"integer"
            },
            "taxType":{
               "type":"string",
               "enum":[
                  "TAX",
                  "FREE"
               ]
            },
            "supplyPrice":{
               "format":"double",
               "type":"number"
            },
            "offerCondition":{
               "type":"string",
               "enum":[
                  "NEW",
                  "REFURBISHED",
                  "USED_BEST",
                  "USED_GOOD",
                  "USED_NORMAL"
               ]
            },
            "offerDescription":{
               "type":"string"
            },
            "pccNeeded":{
               "type":"boolean"
            },
            "bestPriceGuaranteed3P":{
               "type":"boolean"
            },
            "sellerProductItemId":{
               "format":"int64",
               "type":"integer"
            },
            "searchTags":{
               "items":{
                  "type":"string"
               },
               "type":"array"
            },
            "salePrice":{
               "format":"double",
               "type":"number"
            },
            "saleAgentCommission":{
               "format":"double",
               "type":"number"
            },
            "parallelImported":{
               "type":"string",
               "enum":[
                  "PARALLEL_IMPORTED",
                  "NOT_PARALLEL_IMPORTED"
               ]
            },
            "overseasPurchased":{
               "type":"string",
               "enum":[
                  "OVERSEAS_PURCHASED",
                  "NOT_OVERSEAS_PURCHASED"
               ]
            },
            "outboundShippingTimeDay":{
               "format":"int32",
               "type":"integer"
            },
            "originalPrice":{
               "format":"double",
               "type":"number"
            },
            "notices":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItemNotice"
               },
               "type":"array"
            },
            "modelNo":{
               "type":"string"
            },
            "maximumBuyForPersonPeriod":{
               "format":"int32",
               "type":"integer"
            },
            "maximumBuyForPerson":{
               "format":"int32",
               "type":"integer"
            },
            "maximumBuyCount":{
               "format":"int32",
               "type":"integer"
            },
            "itemName":{
               "type":"string"
            },
            "images":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItemImage"
               },
               "type":"array"
            },
            "freePriceType":{
               "type":"string"
            },
            "extraProperties":{
               "additionalProperties":{
                  "type":"string"
               },
               "type":"object"
            },
            "externalVendorSku":{
               "type":"string"
            },
            "emptyBarcodeReason":{
               "type":"string"
            },
            "emptyBarcode":{
               "type":"boolean"
            },
            "contents":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItemContent"
               },
               "type":"array"
            },
            "certifications":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItemCertification"
               },
               "type":"array"
            },
            "barcode":{
               "type":"string"
            },
            "attributes":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItemAttribute"
               },
               "type":"array"
            },
            "adultOnly":{
               "type":"string",
               "enum":[
                  "ADULT_ONLY",
                  "EVERYONE"
               ]
            }
         },
         "type":"object"
      },
      "OSellerProductItemImage":{
         "title":"OSellerProductItemImage",
         "properties":{
            "vendorPath":{
               "type":"string"
            },
            "imageType":{
               "type":"string",
               "enum":[
                  "REPRESENTATION",
                  "REP_OBLONG_ORIGIN",
                  "DETAIL",
                  "USED_PRODUCT"
               ]
            },
            "imageOrder":{
               "format":"int64",
               "type":"integer",
               "minimum":0
            },
            "cdnPath":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OpenApiResultOflong":{
         "title":"OpenApiResultOflong",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "format":"int64",
               "type":"integer"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OpenApiPagedResultOfOSellerProductStatusHistory":{
         "title":"OpenApiPagedResultOfOSellerProductStatusHistory",
         "properties":{
            "nextToken":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OSellerProductStatusHistory"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OpenApiResultOfOSellerProductItemStatus":{
         "title":"OpenApiResultOfOSellerProductItemStatus",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "$ref":"#/definitions/OSellerProductItemStatus"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OpenApiPagedResultOfOProduct":{
         "title":"OpenApiPagedResultOfOProduct",
         "properties":{
            "nextToken":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OProduct"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OSellerProductItemAttribute":{
         "title":"OSellerProductItemAttribute",
         "properties":{
            "attributeValueName":{
               "type":"string"
            },
            "attributeTypeName":{
               "type":"string"
            },
            "exposed":{
               "type":"string",
               "enum":[
                  "EXPOSED",
                  "NONE"
               ]
            },
            "editable":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OpenApiPagedResultOfOSellerProductListItem":{
         "title":"OpenApiPagedResultOfOSellerProductListItem",
         "properties":{
            "nextToken":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OSellerProductListItem"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OAttributeType":{
         "title":"OAttributeType",
         "properties":{
            "usableUnits":{
               "items":{
                  "type":"string"
               },
               "type":"array"
            },
            "required":{
               "type":"string"
            },
            "dataType":{
               "type":"string"
            },
            "basicUnit":{
               "type":"string"
            },
            "attributeTypeName":{
               "type":"string"
            },
            "groupNumber":{
               "type":"string"
            },
            "exposed":{
               "type":"string"
            }
         }
      },
      "OpenApiResultOfOSellerProduct":{
         "title":"OpenApiResultOfOSellerProduct",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "$ref":"#/definitions/OSellerProduct"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "ODocumentTemplate":{
         "title":"ODocumentTemplate",
         "properties":{
            "templateName":{
               "type":"string"
            },
            "required":{
               "type":"string"
            }
         }
      },
      "OVendorInventoryItemContentDetail":{
         "title":"OVendorInventoryItemContentDetail",
         "properties":{
            "detailType":{
               "type":"string",
               "enum":[
                  "TITLE",
                  "IMAGE",
                  "TEXT"
               ]
            },
            "content":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OSellerProductItemContent":{
         "title":"OSellerProductItemContent",
         "properties":{
            "contentsType":{
               "type":"string",
               "enum":[
                  "IMAGE",
                  "IMAGE_NO_SPACE",
                  "TEXT",
                  "IMAGE_TEXT",
                  "TEXT_IMAGE",
                  "IMAGE_IMAGE",
                  "TEXT_TEXT",
                  "TITLE",
                  "HTML"
               ]
            },
            "contentDetails":{
               "items":{
                  "$ref":"#/definitions/OVendorInventoryItemContentDetail"
               },
               "type":"array"
            }
         },
         "type":"object"
      },
      "OpenApiResult":{
         "title":"OpenApiResult",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "type":"object"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OSellerProductItemStatus":{
         "title":"OSellerProductItemStatus",
         "properties":{
            "sellerItemId":{
               "format":"int64",
               "type":"integer"
            },
            "salePrice":{
               "format":"double",
               "type":"number"
            },
            "onSale":{
               "type":"boolean"
            },
            "amountInStock":{
               "format":"int32",
               "type":"integer"
            }
         }
      },
      "OpenApiResultOfListOfOCategory":{
         "title":"OpenApiResultOfListOfOCategory",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OCategory"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OCategoryMeta":{
         "title":"OCategoryMeta",
         "properties":{
            "allowedOfferConditions":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "isAllowSingleItem":{
               "type":"boolean"
            },
            "requiredDocumentNames":{
               "items":{
                  "$ref":"#/definitions/ODocumentTemplate"
               },
               "type":"array"
            },
            "noticeCategories":{
               "items":{
                  "$ref":"#/definitions/ONoticeCategory"
               },
               "type":"array"
            },
            "certifications":{
               "items":{
                  "$ref":"#/definitions/OCertification"
               },
               "type":"array"
            },
            "attributes":{
               "items":{
                  "$ref":"#/definitions/OAttributeType"
               },
               "type":"array"
            }
         }
      },
      "ONoticeCategory":{
         "title":"ONoticeCategory",
         "properties":{
            "noticeCategoryName":{
               "type":"string"
            },
            "noticeCategoryDetailNames":{
               "items":{
                  "$ref":"#/definitions/ONoticeCategoryTemplate"
               },
               "type":"array"
            }
         }
      },
      "OSellerProductRequiredDocument":{
         "title":"OSellerProductRequiredDocument",
         "properties":{
            "vendorDocumentPath":{
               "type":"string"
            },
            "templateName":{
               "type":"string"
            },
            "documentPath":{
               "type":"string"
            }
         }
      },
      "OCategory":{
         "title":"OCategory",
         "properties":{
            "valid":{
               "type":"boolean"
            },
            "divisionType":{
               "type":"string"
            },
            "depth":{
               "format":"int32",
               "type":"integer"
            },
            "categoryName":{
               "type":"string"
            },
            "categoryId":{
               "format":"int64",
               "type":"integer"
            }
         }
      },
      "OSellerProductItemNotice":{
         "title":"OSellerProductItemNotice",
         "properties":{
            "noticeCategoryName":{
               "type":"string"
            },
            "noticeCategoryDetailName":{
               "type":"string"
            },
            "content":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OpenApiResultOfstring":{
         "title":"OpenApiResultOfstring",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "type":"string"
            },
            "code":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OpenApiResultOfOCategoryMeta":{
         "title":"OpenApiResultOfOCategoryMeta",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "$ref":"#/definitions/OCategoryMeta"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OpenApiResultOfListOfOSellerProductItem":{
         "title":"OpenApiResultOfListOfOSellerProductItem",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItem"
               },
               "type":"array"
            },
            "code":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OSellerProductStatusHistory":{
         "title":"OSellerProductStatusHistory",
         "properties":{
            "statusName":{
               "type":"string"
            },
            "createdBy":{
               "type":"string"
            },
            "createdAt":{
               "type":"string"
            },
            "comment":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OSellerProductListItem":{
         "title":"OSellerProductListItem",
         "properties":{
            "vendorId":{
               "type":"string"
            },
            "statusName":{
               "type":"string"
            },
            "sellerProductName":{
               "type":"string"
            },
            "sellerProductId":{
               "format":"int64",
               "type":"integer"
            },
            "saleStartedAt":{
               "type":"string"
            },
            "saleEndedAt":{
               "type":"string"
            },
            "productId":{
               "format":"int64",
               "type":"integer"
            },
            "mdName":{
               "type":"string"
            },
            "mdId":{
               "type":"string"
            },
            "displayCategoryCode":{
               "format":"int64",
               "type":"integer"
            },
            "createdAt":{
               "type":"string"
            },
            "categoryId":{
               "format":"int64",
               "type":"integer"
            },
            "brand":{
               "type":"string"
            }
         }
      },
      "ODisplayCategory":{
         "title":"ODisplayCategory",
         "properties":{
            "status":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "displayItemCategoryCode":{
               "format":"int64",
               "type":"integer"
            },
            "child":{
               "items":{
                  "$ref":"#/definitions/ODisplayCategory"
               },
               "type":"array"
            }
         }
      },
      "OpenApiResultOfboolean":{
         "title":"OpenApiResultOfboolean",
         "properties":{
            "message":{
               "type":"string"
            },
            "data":{
               "type":"boolean"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "OProduct":{
         "title":"OProduct",
         "properties":{
            "valid":{
               "type":"boolean"
            },
            "productName":{
               "type":"string"
            },
            "productId":{
               "format":"int64",
               "type":"integer"
            },
            "itemCount":{
               "format":"int32",
               "type":"integer"
            },
            "description":{
               "type":"string"
            },
            "categoryId":{
               "format":"int64",
               "type":"integer"
            },
            "categoryFullPath":{
               "type":"string"
            },
            "bundled":{
               "type":"boolean"
            }
         }
      },
      "OSellerProduct":{
         "title":"OSellerProduct",
         "required":[
            "displayCategoryCode",
            "vendorUsrId",
            "vendorId"
         ],
         "properties":{
            "vendorUserId":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            },
            "displayProductName":{
               "type":"string"
            },
            "generalProductName":{
               "type":"string"
            },
            "productGroup":{
               "type":"string"
            },
            "unionDeliveryType":{
               "type":"string",
               "enum":[
                  "UNION_DELIVERY",
                  "NOT_UNION_DELIVERY"
               ]
            },
            "statusName":{
               "type":"string"
            },
            "sellerProductName":{
               "type":"string"
            },
            "sellerProductId":{
               "format":"int64",
               "type":"integer"
            },
            "saleStartedAt":{
               "type":"string"
            },
            "saleEndedAt":{
               "type":"string"
            },
            "returnZipCode":{
               "type":"string"
            },
            "returnChargeVendor":{
               "type":"string",
               "enum":[
                  "Y",
                  "N"
               ]
            },
            "returnChargeName":{
               "type":"string"
            },
            "returnCharge":{
               "format":"double",
               "type":"number"
            },
            "returnCenterCode":{
               "type":"string"
            },
            "returnAddressDetail":{
               "type":"string"
            },
            "returnAddress":{
               "type":"string"
            },
            "requiredDocuments":{
               "items":{
                  "$ref":"#/definitions/OSellerProductRequiredDocument"
               },
               "type":"array"
            },
            "requested":{
               "type":"boolean"
            },
            "productId":{
               "format":"int64",
               "type":"integer"
            },
            "outboundShippingPlaceCode":{
               "format":"int64",
               "type":"integer"
            },
            "mdName":{
               "type":"string"
            },
            "mdId":{
               "type":"string"
            },
            "manufacture":{
               "type":"string"
            },
            "extraInfoMessage": {
               "type": "string"
            },
            "items":{
               "items":{
                  "$ref":"#/definitions/OSellerProductItem"
               },
               "type":"array"
            },
            "freeShipOverAmount":{
               "format":"double",
               "type":"number"
            },
            "exchangeType":{
               "type":"string"
            },
            "displayCategoryCode":{
               "format":"int64",
               "type":"integer"
            },
            "deliverySurcharge":{
               "format":"double",
               "type":"number"
            },
            "deliveryMethod":{
               "type":"string",
               "enum":[
                  "SEQUENCIAL",
                  "VENDOR_DIRECT",
                  "MAKE_ORDER",
                  "INSTRUCTURE",
                  "AGENT_BUY",
                  "COLD_FRESH",
                  "MAKE_ORDER_DIRECT"
               ]
            },
            "deliveryCompanyCode":{
               "type":"string"
            },
            "deliveryChargeType":{
               "type":"string",
               "enum":[
                  "FREE",
                  "NOT_FREE",
                  "CHARGE_RECEIVED",
                  "CONDITIONAL_FREE",
                  "FREE_DELIVERY_OVER_9800"
               ]
            },
            "deliveryChargeOnReturn":{
               "format":"double",
               "type":"number"
            },
            "deliveryCharge":{
               "format":"double",
               "type":"number"
            },
            "contributorType":{
               "type":"string"
            },
            "companyContactNumber":{
               "type":"string"
            },
            "categoryId":{
               "format":"int64",
               "type":"integer"
            },
            "bundlePackingDelivery":{
               "format":"int32",
               "type":"integer"
            },
            "brand":{
               "type":"string"
            },
            "afterServiceInformation":{
               "type":"string"
            },
            "afterServiceContactNumber":{
               "type":"string"
            },
            "remoteAreaDeliverable":{
               "type":"string",
               "enum":[
                  "Y",
                  "N"
               ]
            }
         }
      },
      "OSellerCashback":{
         "title":"OSellerCashback",
         "properties":{
            "maxAmount":{
               "format":"double",
               "type":"number"
            },
            "cashbackValue":{
               "format":"double",
               "type":"number"
            },
            "cashbackType":{
               "type":"string"
            }
         }
      },
      "ONoticeCategoryTemplate":{
         "title":"ONoticeCategoryTemplate",
         "properties":{
            "required":{
               "type":"string"
            },
            "noticeCategoryDetailName":{
               "type":"string"
            }
         }
      },
      "OSellerProductItemCertification":{
         "title":"OSellerProductItemCertification",
         "properties":{
            "certificationType":{
               "type":"string"
            },
            "certificationCode":{
               "type":"string"
            }
         },
         "type":"object"
      },
      "OSellerProductCashback":{
         "title":"OSellerProductCashback",
         "properties":{
            "vendorUserId":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            },
            "sellerProductId":{
               "format":"int64",
               "type":"integer"
            },
            "sellerCashback":{
               "$ref":"#/definitions/OSellerCashback"
            }
         }
      },
      "ODummy":{
         "title":"ODummy",
         "properties":{
            "lenRequired":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfListOfOrderSheetDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderSheetDto"
               }
            },
            "message":{
               "type":"string"
            },
            "nextToken": {
               "type":"string"
            }
         }
      },
      "OrderSheetDto":{
         "type":"object",
         "properties":{
            "ableSplitShipping":{
               "type":"boolean"
            },
            "deliveredDate":{
               "type":"string"
            },
            "deliveryCompanyName":{
               "type":"string"
            },
            "inTrasitDateTime":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "orderItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderItemDto"
               }
            },
            "orderedAt":{
               "type":"string"
            },
            "orderer":{
               "$ref":"#/definitions/OrdererDto"
            },
            "overseaShippingInfoDto":{
               "$ref":"#/definitions/OverseaShippingInfoDto"
            },
            "paidAt":{
               "type":"string"
            },
            "parcelPrintMessage":{
               "type":"string"
            },
            "receiver":{
               "$ref":"#/definitions/ReceiverDto"
            },
            "refer":{
               "type":"string"
            },
            "remoteArea":{
               "type":"boolean"
            },
            "remotePrice":{
               "type":"integer",
               "format":"int64"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "shippingPrice":{
               "type":"integer",
               "format":"int64"
            },
            "splitShipping":{
               "type":"boolean"
            },
            "status":{
               "type":"string"
            }
         }
      },
      "OrderItemDto":{
         "type":"object",
         "properties":{
            "cancelCount":{
               "type":"integer",
               "format":"int32"
            },
            "canceled":{
               "type":"boolean"
            },
            "confirmDate":{
               "type":"string"
            },
            "deliveryChargeTypeName":{
               "type":"string"
            },
            "discountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "instantCouponDiscount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "downloadableCouponDiscount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "coupangDiscount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "estimatedShippingDate":{
               "type":"string"
            },
            "etcInfoHeader":{
               "type":"string"
            },
            "etcInfoValue":{
               "type":"string"
            },
            "etcInfoValues":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "externalVendorSkuCode":{
               "type":"string"
            },
            "extraProperties":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               },
               "x-cag-map-key-type":"java.lang.String"
            },
            "firstSellerProductItemName":{
               "type":"string"
            },
            "holdCountForCancel":{
               "type":"integer",
               "format":"int32"
            },
            "invoiceNumberUploadDate":{
               "type":"string"
            },
            "orderPrice":{
               "type":"integer",
               "format":"int64"
            },
            "plannedShippingDate":{
               "type":"string"
            },
            "pricingBadge":{
               "type":"boolean"
            },
            "productId":{
               "type":"integer",
               "format":"int64"
            },
            "salesPrice":{
               "type":"integer",
               "format":"int64"
            },
            "sellerProductId":{
               "type":"integer",
               "format":"int64"
            },
            "sellerProductItemName":{
               "type":"string"
            },
            "sellerProductName":{
               "type":"string"
            },
            "shippingCount":{
               "type":"integer",
               "format":"int32"
            },
            "usedProduct":{
               "type":"boolean"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemName":{
               "type":"string"
            },
            "vendorItemPackageId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemPackageName":{
               "type":"string"
            }
         }
      },
      "OrdererDto":{
         "type":"object",
         "properties":{
            "email":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "safeNumber":{
               "type":"string"
            }
         }
      },
      "OverseaShippingInfoDto":{
         "type":"object",
         "properties":{
            "ordererPhoneNumber":{
               "type":"string"
            },
            "ordererSsn":{
               "type":"string"
            },
            "personalCustomsClearanceCode":{
               "type":"string"
            }
         }
      },
      "ReceiverDto":{
         "type":"object",
         "properties":{
            "addr1":{
               "type":"string"
            },
            "addr2":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "postCode":{
               "type":"string"
            },
            "safeNumber":{
               "type":"string"
            }
         }
      },
      "PrepareShipmentReqDto":{
         "type":"object",
         "properties":{
            "shipmentBoxIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfOrderSheetResponseDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/OrderSheetResponseDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "OrderSheetResponseDto":{
         "type":"object",
         "properties":{
            "responseCode":{
               "type":"integer",
               "format":"int32"
            },
            "responseList":{
               "type":"array",
               "items":{
                  "type":"object"
               }
            },
            "responseMessage":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfOrderSheetDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/OrderSheetDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfDeliveryHistoryDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DeliveryHistoryDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DeliveryHistoryDto":{
         "type":"object",
         "properties":{
            "details":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DeliveryHistoryDetailDto"
               }
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "DeliveryHistoryDetailDto":{
         "type":"object",
         "properties":{
            "deliveryStatus":{
               "type":"string"
            },
            "deliveryStatusDesc":{
               "type":"string"
            },
            "updatedAt":{
               "type":"string"
            }
         }
      },
      "UploadInvoiceReqDtoV2":{
         "type":"object",
         "properties":{
            "orderSheetInvoiceApplyDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderSheetInvoiceApplyDtoV2"
               }
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "OrderSheetInvoiceApplyDtoV2":{
         "type":"object",
         "properties":{
            "deliveryCompanyCode":{
               "type":"string"
            },
            "estimatedShippingDate":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "preSplitShipped":{
               "type":"boolean"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "splitShipping":{
               "type":"boolean"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ReleaseStopDto":{
         "type":"object",
         "properties":{
            "cancelCount":{
               "type":"integer",
               "format":"int32"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfSimpleResultDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/SimpleResultDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "SimpleResultDto":{
         "type":"object",
         "properties":{
            "resultCode":{
               "type":"string"
            },
            "resultMessage":{
               "type":"string"
            }
         }
      },
      "ReleaseInfoDto":{
         "type":"object",
         "properties":{
            "deliveryCompanyCode":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "CsCancelRequestDto":{
         "type":"object",
         "properties":{
            "bigCancelCode":{
               "type":"string"
            },
            "middleCancelCode":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "paymentItemIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "receiptCounts":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "userId":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            },
            "vendorItemIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "ResponseDtoOfCSReceiptResult":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/CSReceiptResult"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "CSReceiptResult":{
         "type":"object",
         "properties":{
            "cancelIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "resultMessage":{
               "type":"string"
            },
            "success":{
               "type":"boolean",
               "example":false
            }
         }
      },
      "PagedResponseDtoOfListOfExchangeDtoV1":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ExchangeDtoV1"
               }
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"string"
            }
         }
      },
      "ExchangeDtoV1":{
         "type":"object",
         "properties":{
            "cancelReason":{
               "type":"string"
            },
            "collectCompleteDate":{
               "type":"string",
               "format":"date-time"
            },
            "collectInformationsDto":{
               "$ref":"#/definitions/CollectInformationsDto"
            },
            "collectStatus":{
               "type":"string",
               "enum":[
                  "BeforeDirection",
                  "CompleteDirection",
                  "Collecting",
                  "CompleteCollect",
                  "DirectionFail",
                  "Fail",
                  "Withdraw",
                  "NoCollect",
                  "NoneData"
               ]
            },
            "createdAt":{
               "type":"string",
               "format":"date-time"
            },
            "createdByType":{
               "type":"string",
               "enum":[
                  "CUSTOMER",
                  "COUNSELOR",
                  "COUPANG",
                  "VENDOR",
                  "ETC",
                  "TRACKING",
                  "SYSTEM",
                  "BATCH"
               ]
            },
            "createdByTypeLabel":{
               "type":"string"
            },
            "deliveryInvoiceGroupDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DeliveryInvoiceGroupDtoV1"
               }
            },
            "deliveryInvoiceModifiable":{
               "type":"boolean"
            },
            "deliveryStatus":{
               "type":"string",
               "enum":[
                  "BeforeDirection",
                  "CompleteDirection",
                  "Delivering",
                  "CompleteDelivery",
                  "DirectionFail",
                  "VendorDirection",
                  "Fail",
                  "Withdraw",
                  "NoneData"
               ]
            },
            "exchangeAddressDtoV1":{
               "$ref":"#/definitions/ExchangeAddressDtoV1"
            },
            "exchangeAmount":{
               "type":"integer",
               "format":"int32"
            },
            "exchangeId":{
               "type":"integer",
               "format":"int64"
            },
            "exchangeItemDtoV1s":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ExchangeItemDtoV1"
               }
            },
            "exchangeStatus":{
               "type":"string",
               "enum":[
                  "RECEIPT",
                  "PROGRESS",
                  "SUCCESS",
                  "REJECT",
                  "CANCEL"
               ]
            },
            "exchangeStatusLabel":{
               "type":"string"
            },
            "faultType":{
               "type":"string",
               "enum":[
                  "COUPANG",
                  "VENDOR",
                  "CUSTOMER",
                  "WMS",
                  "GENERAL"
               ]
            },
            "faultTypeLabel":{
               "type":"string"
            },
            "modifiedAt":{
               "type":"string",
               "format":"date-time"
            },
            "modifiedByType":{
               "type":"string",
               "enum":[
                  "CUSTOMER",
                  "COUNSELOR",
                  "COUPANG",
                  "VENDOR",
                  "ETC",
                  "TRACKING",
                  "SYSTEM",
                  "BATCH"
               ]
            },
            "modifiedByTypeLabel":{
               "type":"string"
            },
            "orderDeliveryStatusCode":{
               "type":"string",
               "enum":[
                  "ACCEPT",
                  "INSTRUCT",
                  "DEPARTURE",
                  "DELIVERING",
                  "FINAL_DELIVERY",
                  "NONE_TRACKING"
               ]
            },
            "orderDeliveryStatusLabel":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "reason":{
               "type":"string"
            },
            "reasonCode":{
               "type":"string"
            },
            "reasonCodeText":{
               "type":"string"
            },
            "reasonEtcDetail":{
               "type":"string"
            },
            "referType":{
               "type":"string",
               "enum":[
                  "VENDOR",
                  "CS_CENTER",
                  "WEB_PC",
                  "WEB_MOBILE"
               ]
            },
            "referTypeLabel":{
               "type":"string"
            },
            "rejectable":{
               "type":"boolean"
            },
            "returnDeliveryDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnDeliveryDto"
               }
            },
            "successable":{
               "type":"boolean"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "CollectInformationsDto":{
         "type":"object",
         "properties":{
            "expectedReturnDate":{
               "type":"string",
               "format":"date-time"
            },
            "returnType":{
               "type":"string"
            },
            "returndeliveryDestinationDto":{
               "$ref":"#/definitions/ReturndeliveryDestinationDto"
            },
            "returndeliveryItemDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnDeliveryStatusItemDtoV1"
               }
            }
         }
      },
      "ReturndeliveryDestinationDto":{
         "type":"object",
         "properties":{
            "customerAddress":{
               "type":"string"
            },
            "customerAddressDetail":{
               "type":"string"
            },
            "customerMobile":{
               "type":"string"
            },
            "customerName":{
               "type":"string"
            },
            "customerPhone":{
               "type":"string"
            },
            "customerZipCode":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "orderedByMobile":{
               "type":"string"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "returnCenterCode":{
               "type":"string"
            },
            "returnDeliveryId":{
               "type":"integer",
               "format":"int64"
            },
            "safetyNumber":{
               "type":"string"
            },
            "safetyNumberId":{
               "type":"integer",
               "format":"int64"
            },
            "safetyNumberStatus":{
               "type":"string",
               "enum":[
                  "WAIT",
                  "ENABLE",
                  "DEPOSE",
                  "DISABLE",
                  "ERROR",
                  "RESERVE"
               ]
            },
            "vendorAddress":{
               "type":"string"
            },
            "vendorAddressDetail":{
               "type":"string"
            },
            "vendorMobile":{
               "type":"string"
            },
            "vendorName":{
               "type":"string"
            },
            "vendorPhone":{
               "type":"string"
            },
            "vendorZipCode":{
               "type":"string"
            }
         }
      },
      "ReturnDeliveryStatusItemDtoV1":{
         "type":"object",
         "properties":{
            "collectStatus":{
               "type":"string"
            },
            "confirmType":{
               "type":"string"
            },
            "count":{
               "type":"integer",
               "format":"int32"
            },
            "createdAt":{
               "type":"string",
               "format":"date-time"
            },
            "createdBy":{
               "type":"string"
            },
            "modifiedBy":{
               "type":"string"
            },
            "moodifiedAt":{
               "type":"string",
               "format":"date-time"
            },
            "paymentItemId":{
               "type":"integer",
               "format":"int64"
            },
            "paymentReturnDeliveryMapId":{
               "type":"integer",
               "format":"int64"
            },
            "releaseStatus":{
               "type":"string"
            },
            "returnCount":{
               "type":"integer",
               "format":"int32"
            },
            "statusCode":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "DeliveryInvoiceGroupDtoV1":{
         "type":"object",
         "properties":{
            "boxPrice":{
               "type":"integer",
               "format":"int64"
            },
            "bundleType":{
               "type":"string"
            },
            "customerType":{
               "type":"string"
            },
            "deliveryInvoiceDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DeliveryInvoiceDtoV1"
               }
            },
            "extraMessage":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "orderType":{
               "type":"string"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "shippingDeliveryType":{
               "type":"string"
            }
         }
      },
      "DeliveryInvoiceDtoV1":{
         "type":"object",
         "properties":{
            "deliverCode":{
               "type":"string"
            },
            "deliveredDate":{
               "type":"string",
               "format":"date-time"
            },
            "estimatedDeliveryDate":{
               "type":"string",
               "format":"date-time"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "invoiceNumberUploadDate":{
               "type":"string",
               "format":"date-time"
            },
            "invoiceVendorItemDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/InvoiceVendorItemDtoV1"
               }
            },
            "isMainShipmentInvoice":{
               "type":"boolean"
            },
            "parcelType":{
               "type":"string"
            },
            "statusCode":{
               "type":"string"
            },
            "statusModifiedAt":{
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "InvoiceVendorItemDtoV1":{
         "type":"object",
         "properties":{
            "estimatedShippingDate":{
               "type":"string",
               "format":"date-time"
            },
            "hasAdditionalItem":{
               "type":"boolean"
            },
            "promiseDeliveryDate":{
               "type":"string",
               "format":"date-time"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ExchangeAddressDtoV1":{
         "type":"object",
         "properties":{
            "createdAt":{
               "type":"string",
               "format":"date-time"
            },
            "deliveryAddress":{
               "type":"string"
            },
            "deliveryAddressDetail":{
               "type":"string"
            },
            "deliveryAddressZipCode":{
               "type":"string"
            },
            "deliveryCustomerName":{
               "type":"string"
            },
            "deliveryMemo":{
               "type":"string"
            },
            "deliveryMobile":{
               "type":"string"
            },
            "deliveryPhone":{
               "type":"string"
            },
            "exchangeAddressId":{
               "type":"integer",
               "format":"int64"
            },
            "exchangeId":{
               "type":"integer",
               "format":"int64"
            },
            "modifiedAt":{
               "type":"string",
               "format":"date-time"
            },
            "returnAddress":{
               "type":"string"
            },
            "returnAddressDetail":{
               "type":"string"
            },
            "returnAddressZipCode":{
               "type":"string"
            },
            "returnCustomerName":{
               "type":"string"
            },
            "returnMemo":{
               "type":"string"
            },
            "returnMobile":{
               "type":"string"
            },
            "returnPhone":{
               "type":"string"
            }
         }
      },
      "ExchangeItemDtoV1":{
         "type":"object",
         "properties":{
            "createdAt":{
               "type":"string",
               "format":"date-time"
            },
            "exchangeItemId":{
               "type":"integer",
               "format":"int64"
            },
            "modifiedAt":{
               "type":"string",
               "format":"date-time"
            },
            "orderItemDeliveryComplete":{
               "type":"boolean"
            },
            "orderItemId":{
               "type":"integer",
               "format":"int64"
            },
            "orderItemName":{
               "type":"string"
            },
            "orderItemReturnComplete":{
               "type":"boolean"
            },
            "orderItemUnitPrice":{
               "type":"integer",
               "format":"int64"
            },
            "orderPackageId":{
               "type":"integer",
               "format":"int64"
            },
            "orderPackageName":{
               "type":"string"
            },
            "originalShipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "targetItemDeliveryComplete":{
               "type":"boolean"
            },
            "targetItemId":{
               "type":"integer",
               "format":"int64"
            },
            "targetItemName":{
               "type":"string"
            },
            "targetItemUnitPrice":{
               "type":"integer",
               "format":"int64"
            },
            "targetPackageId":{
               "type":"integer",
               "format":"int64"
            },
            "targetPackageName":{
               "type":"string"
            }
         }
      },
      "ReturnDeliveryDto":{
         "type":"object",
         "properties":{
            "deliveryCompanyCode":{
               "type":"string"
            },
            "deliveryInvoiceNo":{
               "type":"string"
            }
         }
      },
      "ConfirmContent":{
         "type":"object",
         "properties":{
            "exchangeId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"object"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "ExchangeCancelDto":{
         "type":"object",
         "properties":{
            "exchangeId":{
               "type":"integer",
               "format":"int64"
            },
            "exchangeRejectCode":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "InvoiceReqDto":{
         "type":"object",
         "properties":{
            "orderSheetInvoiceApplyDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderSheetInvoiceDto"
               }
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "OrderSheetInvoiceDto":{
         "type":"object",
         "properties":{
            "deliveryCompanyCode":{
               "type":"string"
            },
            "estimatedShippingDate":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "preSplitShipped":{
               "type":"boolean"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "splitShipping":{
               "type":"boolean"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ExchangeInvoicesDto":{
         "type":"object",
         "properties":{
            "exchangeId":{
               "type":"integer",
               "format":"int64"
            },
            "goodsDeliveryCode":{
               "type":"string"
            },
            "invoiceNumber":{
               "type":"string"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfListOfReturnDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnDto"
               }
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"string"
            }
         }
      },
      "ReturnDto":{
         "type":"object",
         "properties":{
            "cancelCountSum":{
               "type":"integer",
               "format":"int32"
            },
            "cancelReason":{
               "type":"string"
            },
            "cancelReasonCategory1":{
               "type":"string"
            },
            "cancelReasonCategory2":{
               "type":"string"
            },
            "completeConfirmDate":{
               "type":"string"
            },
            "completeConfirmType":{
               "type":"string"
            },
            "createdAt":{
               "type":"string"
            },
            "enclosePrice":{
               "type":"integer",
               "format":"int64"
            },
            "faultByType":{
               "type":"string"
            },
            "modifiedAt":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "paymentId":{
               "type":"integer",
               "format":"int64"
            },
            "preRefund":{
               "type":"boolean"
            },
            "reasonCode":{
               "type":"string"
            },
            "reasonCodeText":{
               "type":"string"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "receiptStatus":{
               "type":"string"
            },
            "receiptType":{
               "type":"string"
            },
            "releaseStopStatus":{
               "type":"string"
            },
            "requesterAddress":{
               "type":"string"
            },
            "requesterAddressDetail":{
               "type":"string"
            },
            "requesterName":{
               "type":"string"
            },
            "requesterPhoneNumber":{
               "type":"string"
            },
            "requesterRealPhoneNumber":{
               "type":"string"
            },
            "requesterZipCode":{
               "type":"string"
            },
            "returnDeliveryDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnDeliveryDto"
               }
            },
            "returnDeliveryId":{
               "type":"integer",
               "format":"int64"
            },
            "returnDeliveryType":{
               "type":"string"
            },
            "returnItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnItemDto"
               }
            },
            "returnShippingCharge":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ReturnItemDto":{
         "type":"object",
         "properties":{
            "cancelCount":{
               "type":"integer",
               "format":"int32"
            },
            "purchaseCount":{
               "type":"integer",
               "format":"int32"
            },
            "sellerProductId":{
               "type":"integer",
               "format":"int64"
            },
            "sellerProductName":{
               "type":"string"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemName":{
               "type":"string"
            },
            "vendorItemPackageId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemPackageName":{
               "type":"string"
            },
            "releaseStatus": {
               "type": "string"
            },
            "cancelCompleteUser": {
               "type": "string"
            }
         }
      },
      "ResponseDtoOfReturnDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/ReturnDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "WarehouseCheckDto":{
         "type":"object",
         "properties":{
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ReturnApprovalDto":{
         "type":"object",
         "properties":{
            "cancelCount":{
               "type":"integer",
               "format":"int32"
            },
            "receiptId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfPagedListOfCSCustomerInquiryDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/PagedListOfCSCustomerInquiryDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "PagedListOfCSCustomerInquiryDto":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CSCustomerInquiryDto"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "CSCustomerInquiryDto":{
         "type":"object",
         "properties":{
            "buyerEmail":{
               "type":"string"
            },
            "commentDtoList":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CSInquiryCommentDto"
               }
            },
            "content":{
               "type":"string"
            },
            "inquiryAt":{
               "type":"string"
            },
            "inquiryId":{
               "type":"integer",
               "format":"int64"
            },
            "orderIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "productId":{
               "type":"integer",
               "format":"int64"
            },
            "sellerItemId":{
               "type":"integer",
               "format":"int64"
            },
            "sellerProductId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "Pagination":{
         "type":"object",
         "properties":{
            "countPerPage":{
               "type":"integer",
               "format":"int32"
            },
            "currentPage":{
               "type":"integer",
               "format":"int32"
            },
            "totalElements":{
               "type":"integer",
               "format":"int64"
            },
            "totalPages":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "CSInquiryCommentDto":{
         "type":"object",
         "properties":{
            "content":{
               "type":"string"
            },
            "inquiryCommentAt":{
               "type":"string"
            },
            "inquiryCommentId":{
               "type":"integer",
               "format":"int64"
            },
            "inquiryId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "CSAddComment":{
         "type":"object",
         "properties":{
            "content":{
               "type":"string"
            },
            "replyBy":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfPagedListOfCSCoupangInquiryDTO":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/PagedListOfCSCoupangInquiryDTO"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "PagedListOfCSCoupangInquiryDTO":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CSCoupangInquiryDTO"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "CSCoupangInquiryDTO":{
         "type":"object",
         "properties":{
            "answeredAt":{
               "type":"string"
            },
            "buyerEmail":{
               "type":"string"
            },
            "buyerPhone":{
               "type":"string"
            },
            "content":{
               "type":"string"
            },
            "csPartnerCounselingStatus":{
               "type":"string"
            },
            "inquiryAt":{
               "type":"string"
            },
            "inquiryId":{
               "type":"integer",
               "format":"int64"
            },
            "inquiryStatus":{
               "type":"string"
            },
            "itemName":{
               "type":"string"
            },
            "orderDate":{
               "type":"string"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "receiptCategory":{
               "type":"string"
            },
            "replies":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Replies"
               }
            },
            "saleEndedAt":{
               "type":"string"
            },
            "saleStartedAt":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "Replies":{
         "type":"object",
         "properties":{
            "answerId":{
               "type":"integer",
               "format":"int64"
            },
            "answerType":{
               "type":"string"
            },
            "content":{
               "type":"string"
            },
            "needAnswer":{
               "type":"boolean"
            },
            "parentAnswerId":{
               "type":"integer",
               "format":"int64"
            },
            "partnerTransferCompleteReason":{
               "type":"string"
            },
            "partnerTransferStatus":{
               "type":"string"
            },
            "receptionist":{
               "type":"string"
            },
            "receptionistName":{
               "type":"string"
            },
            "replyAt":{
               "type":"string"
            }
         }
      },
      "CSCoupangReplyCondition":{
         "type":"object",
         "properties":{
            "content":{
               "type":"string"
            },
            "inquiryId":{
               "type":"string"
            },
            "parentAnswerId":{
               "type":"string"
            },
            "replyBy":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "ApiResponseDtoOfListOfGoodsFeeCorrectionOutputDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GoodsFeeCorrectionOutputDto"
               }
            },
            "hasNext":{
               "type":"boolean"
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "GoodsFeeCorrectionOutputDto":{
         "type":"object",
         "properties":{
            "feeCorrection":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "feeCorrectionVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "recognitionDate":{
               "type":"string"
            },
            "saleDate":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ApiResponseDtoOfListOfGoodsSalesOutputDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GoodsSalesOutputDto"
               }
            },
            "hasNext":{
               "type":"boolean"
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "GoodsSalesOutputDto":{
         "type":"object",
         "properties":{
            "goodsSaleBaseDeliverySaleOutputDto":{
               "$ref":"#/definitions/GoodsSalesBaseDeliverySaleOutputDto"
            },
            "goodsSaleBaseDetailOutputDtos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GoodsSalesBaseDetailOutputDto"
               }
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "recognitionDate":{
               "type":"string"
            },
            "recognitionType":{
               "type":"string"
            },
            "saleDate":{
               "type":"string"
            },
            "saleTransactionId":{
               "type":"string"
            },
            "saleType":{
               "type":"string"
            }
         }
      },
      "GoodsSalesBaseDeliverySaleOutputDto":{
         "type":"object",
         "properties":{
            "deliveryAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "deliverySupplyFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "deliverySupplyFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteAreaAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteAreaAmountFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteAreaAmountFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "totalDeliveryAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "totalDeliverySupplyFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "totalDeliverySupplyFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            }
         }
      },
      "GoodsSalesBaseDetailOutputDto":{
         "type":"object",
         "properties":{
            "agreedFeePolicy":{
               "type":"boolean"
            },
            "coupangDiscountCoupon":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "externalCode":{
               "type":"string"
            },
            "paymentAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "payoutTarget":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "productId":{
               "type":"integer",
               "format":"int64"
            },
            "productName":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "saleAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "taxType":{
               "type":"string"
            },
            "unitPrice":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemName":{
               "type":"string"
            }
         }
      },
      "ApiNextResponseDtoOfListOfOrderSnapshotViewDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderSnapshotViewDto"
               }
            },
            "hasNext":{
               "type":"boolean"
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"string"
            }
         }
      },
      "OrderSnapshotViewDto":{
         "type":"object",
         "properties":{
            "amount":{
               "type":"integer",
               "format":"int64"
            },
            "cancelDeliveryPrice":{
               "type":"integer",
               "format":"int64"
            },
            "cancelRemoteAreaDeliveryPrice":{
               "type":"integer",
               "format":"int64"
            },
            "dcCoupangShareAmount":{
               "type":"integer",
               "format":"int64"
            },
            "dcSellerShareAmount":{
               "type":"integer",
               "format":"int64"
            },
            "estimatedPayDate":{
               "type":"string"
            },
            "estimatedSettlementAmount":{
               "type":"integer",
               "format":"int64"
            },
            "estimatedSettlementDate":{
               "type":"string"
            },
            "fee":{
               "type":"integer",
               "format":"int64"
            },
            "feeRatio":{
               "type":"number",
               "format":"double"
            },
            "feeRatioWithoutVAT":{
               "type":"number",
               "format":"double"
            },
            "lastCanceledAt":{
               "type":"string"
            },
            "lastCoupangConfirmReceiptAt":{
               "type":"string"
            },
            "lastDeliveryStatus":{
               "type":"string"
            },
            "lastDeliveryStatusChangedAt":{
               "type":"string"
            },
            "lastPurchaseConfirmedAt":{
               "type":"string"
            },
            "orderDeliveryPrice":{
               "type":"integer",
               "format":"int64"
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "orderRemoteAreaDeliveryPrice":{
               "type":"integer",
               "format":"int64"
            },
            "orderedAt":{
               "type":"string"
            },
            "paidAt":{
               "type":"string"
            },
            "paidPrice":{
               "type":"integer",
               "format":"int64"
            },
            "paidQuantity":{
               "type":"integer",
               "format":"int32"
            },
            "purchaseConfirmAmount":{
               "type":"integer",
               "format":"int64"
            },
            "purchaseConfirmQuantity":{
               "type":"integer",
               "format":"int32"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorId":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemName":{
               "type":"string"
            }
         }
      },
      "OpenapiResponseOfListOfBudgetStateResponse":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfListOfBudgetStateResponse"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfListOfBudgetStateResponse":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/BudgetStateResponse"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "BudgetStateResponse":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "targetMonth":{
               "type":"string"
            },
            "totalBudgetAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "usedBudgetAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "vendorShareRatio":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "OpenapiResponseOfListOfContractOpenAPIV2Dto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfListOfContractOpenAPIV2Dto"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfListOfContractOpenAPIV2Dto":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ContractOpenAPIV2Dto"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "ContractOpenAPIV2Dto":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "coupangShareRatio":{
               "type":"number",
               "format":"double"
            },
            "end":{
               "type":"string"
            },
            "gmvRatio":{
               "type":"integer",
               "format":"int64"
            },
            "modifiedAt":{
               "type":"string"
            },
            "modifiedBy":{
               "type":"string"
            },
            "sellerId":{
               "type":"string"
            },
            "sellerShareRatio":{
               "type":"number",
               "format":"double"
            },
            "start":{
               "type":"string"
            },
            "type":{
               "type":"string"
            },
            "useBudget":{
               "type":"boolean"
            },
            "vendorContractId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "OpenapiResponseOfContractOpenAPIV2Dto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfContractOpenAPIV2Dto"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfContractOpenAPIV2Dto":{
         "type":"object",
         "properties":{
            "content":{
               "$ref":"#/definitions/ContractOpenAPIV2Dto"
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "OpenapiResponseOfCouponInfoOpenAPIV2Response":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfCouponInfoOpenAPIV2Response"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfCouponInfoOpenAPIV2Response":{
         "type":"object",
         "properties":{
            "content":{
               "$ref":"#/definitions/CouponInfoOpenAPIV2Response"
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "CouponInfoOpenAPIV2Response":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "endAt":{
               "type":"string"
            },
            "maxDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "promotionName":{
               "type":"string"
            },
            "startAt":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "type":{
               "type":"string"
            },
            "vendorContractId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "CouponCreateRequestOpenAPIV2Form":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "endAt":{
               "type":"string"
            },
            "maxDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "name":{
               "type":"string"
            },
            "startAt":{
               "type":"string"
            },
            "type":{
               "type":"string"
            }
         }
      },
      "OpenapiResponseOfRequested":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfRequested"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfRequested":{
         "type":"object",
         "properties":{
            "content":{
               "$ref":"#/definitions/Requested"
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "Requested":{
         "type":"object",
         "properties":{
            "requestedId":{
               "type":"string"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "OpenapiResponseOfListOfCouponInfoOpenAPIV2Response":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfListOfCouponInfoOpenAPIV2Response"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfListOfCouponInfoOpenAPIV2Response":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponInfoOpenAPIV2Response"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "OpenapiResponseOfListOfOrderCouponInfoV2Response":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfListOfOrderCouponInfoV2Response"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfListOfOrderCouponInfoV2Response":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderCouponInfoV2Response"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "OrderCouponInfoV2Response":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "endAt":{
               "type":"string"
            },
            "maxDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "promotionName":{
               "type":"string"
            },
            "startAt":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "type":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "OpenapiResponseOfListOfCouponItemInfoResponse":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfListOfCouponItemInfoResponse"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfListOfCouponItemInfoResponse":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponItemInfoResponse"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "CouponItemInfoResponse":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "couponItemId":{
               "type":"integer",
               "format":"int64"
            },
            "endAt":{
               "type":"string"
            },
            "startAt":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "VendorItemIdBundle":{
         "type":"object",
         "properties":{
            "vendorItems":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "OpenapiResponseOfCouponItemInfoResponse":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfCouponItemInfoResponse"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfCouponItemInfoResponse":{
         "type":"object",
         "properties":{
            "content":{
               "$ref":"#/definitions/CouponItemInfoResponse"
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "OpenapiResponseOfRequestedStatus":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/DataOfRequestedStatus"
            },
            "errorMessage":{
               "type":"string"
            },
            "httpStatus":{
               "type":"integer",
               "format":"int32"
            },
            "httpStatusMessage":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "DataOfRequestedStatus":{
         "type":"object",
         "properties":{
            "content":{
               "$ref":"#/definitions/RequestedStatus"
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            },
            "success":{
               "type":"boolean"
            }
         }
      },
      "RequestedStatus":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "failed":{
               "type":"integer",
               "format":"int64"
            },
            "failedVendorItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FailVendorItem"
               }
            },
            "requestedId":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "succeeded":{
               "type":"integer",
               "format":"int64"
            },
            "total":{
               "type":"integer",
               "format":"int64"
            },
            "type":{
               "type":"string"
            }
         }
      },
      "FailVendorItem":{
         "type":"object",
         "properties":{
            "reason":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ShippingPlaceDetailDto":{
         "type":"object",
         "properties":{
            "addressId":{
               "type":"integer",
               "format":"int64"
            },
            "global":{
               "type":"boolean"
            },
            "goodsflowInfoOpenApiDto":{
               "$ref":"#/definitions/GoodsflowInfoOpenApiDto"
            },
            "outboundShippingPlaceCode":{
               "type":"integer",
               "format":"int64"
            },
            "placeAddresses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PlaceAddressDto"
               }
            },
            "remoteInfos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RemoteInfoDto"
               }
            },
            "returnCenterCode":{
               "type":"string"
            },
            "shippingPlaceName":{
               "type":"string"
            },
            "usable":{
               "type":"boolean"
            },
            "userId":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "GoodsflowInfoOpenApiDto":{
         "type":"object",
         "properties":{
            "consumerCashFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "consumerCashFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "consumerCashFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "contractCustomerNumber":{
               "type":"string"
            },
            "contractNumber":{
               "type":"string"
            },
            "deliverCode":{
               "type":"string"
            },
            "deliverName":{
               "type":"string"
            },
            "goodsflowContractId":{
               "type":"integer",
               "format":"int64"
            },
            "requestKey":{
               "type":"integer",
               "format":"int64"
            },
            "returnFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "returnFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "returnFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCashFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCashFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCashFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee20kg":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "PlaceAddressDto":{
         "type":"object",
         "properties":{
            "addressType":{
               "type":"string"
            },
            "companyContactNumber":{
               "type":"string"
            },
            "countryCode":{
               "type":"string"
            },
            "phoneNumber2":{
               "type":"string"
            },
            "returnAddress":{
               "type":"string"
            },
            "returnAddressDetail":{
               "type":"string"
            },
            "returnZipCode":{
               "type":"string"
            }
         }
      },
      "RemoteInfoDto":{
         "type":"object",
         "properties":{
            "deliveryCode":{
               "type":"string"
            },
            "jeju":{
               "type":"integer",
               "format":"int32"
            },
            "notJeju":{
               "type":"integer",
               "format":"int32"
            },
            "remoteInfoId":{
               "type":"integer",
               "format":"int64"
            },
            "usable":{
               "type":"boolean"
            }
         }
      },
      "ResponseDtoOfPagedListOfOutboundInquiryReturnDTO":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/PagedListOfOutboundInquiryReturnDTO"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "PagedListOfOutboundInquiryReturnDTO":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OutboundInquiryReturnDTO"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "OutboundInquiryReturnDTO":{
         "type":"object",
         "properties":{
            "createDate":{
               "type":"string"
            },
            "outboundShippingPlaceCode":{
               "type":"integer",
               "format":"int64"
            },
            "placeAddresses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PlaceAddressDto"
               }
            },
            "remoteInfos":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RemoteInfoDto"
               }
            },
            "shippingPlaceName":{
               "type":"string"
            },
            "usable":{
               "type":"boolean"
            }
         }
      },
      "ResponseDtoOfPagedListOfShippingPlaceResponseReturnDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/PagedListOfShippingPlaceResponseReturnDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "PagedListOfShippingPlaceResponseReturnDto":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ShippingPlaceResponseReturnDto"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "ShippingPlaceResponseReturnDto":{
         "type":"object",
         "properties":{
            "consumerCashFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "consumerCashFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "consumerCashFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "createdAt":{
               "type":"string"
            },
            "deliverCode":{
               "type":"string"
            },
            "deliverName":{
               "type":"string"
            },
            "errorMessage":{
               "type":"string"
            },
            "goodsflowStatus":{
               "type":"string"
            },
            "placeAddresses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PlaceAddressDto"
               }
            },
            "returnCenterCode":{
               "type":"string"
            },
            "returnFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "returnFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "returnFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "shippingPlaceName":{
               "type":"string"
            },
            "usable":{
               "type":"boolean"
            },
            "vendorCashFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCashFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCashFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee05kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee10kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorCreditFee20kg":{
               "type":"integer",
               "format":"int32"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "OpenapiResponseOfListOfRevenueHistoryApiDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RevenueHistoryApiDto"
               }
            },
            "hasNext":{
               "type":"boolean"
            },
            "message":{
               "type":"string"
            },
            "nextToken":{
               "type":"string"
            }
         }
      },
      "RevenueHistoryApiDto":{
         "type":"object",
         "properties":{
            "deliveryFee":{
               "$ref":"#/definitions/RevenueHistoryDeliveryFeeApiDto"
            },
            "finalSettlementDate":{
               "type":"string"
            },
            "items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RevenueHistoryItemApiDto"
               }
            },
            "orderId":{
               "type":"integer",
               "format":"int64"
            },
            "recognitionDate":{
               "type":"string"
            },
            "saleDate":{
               "type":"string"
            },
            "saleType":{
               "type":"string"
            },
            "settlementDate":{
               "type":"string"
            }
         }
      },
      "RevenueHistoryDeliveryFeeApiDto":{
         "type":"object",
         "properties":{
            "amount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "baseAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "baseFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "baseFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "fee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "feeRatio":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "feeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "remoteFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "settlementAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            }
         }
      },
      "RevenueHistoryItemApiDto":{
         "type":"object",
         "properties":{
            "coupangDiscountCoupon":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "couranteeFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "couranteeFeeRatio":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "couranteeFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "discountCouponPolicyAgreement":{
               "type":"boolean"
            },
            "externalSellerSkuCode":{
               "type":"string"
            },
            "productId":{
               "type":"integer",
               "format":"int64"
            },
            "productName":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "saleAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "salePrice":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "sellerDiscountCoupon":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFeeRatio":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFeeVat":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "settlementAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "storeFeeDiscount": {
               "type": "number",
               "x-cag-support-type": "java.math.BigDecimal"
            },
            "storeFeeDiscountVat": {
               "type": "number",
               "x-cag-support-type": "java.math.BigDecimal"
            },
            "taxType":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            },
            "vendorItemName":{
               "type":"string"
            }
         }
      },
      "SettlementHistoryDto":{
         "type":"object",
         "properties":{
            "bankAccount":{
               "type":"string"
            },
            "bankAccountHolder":{
               "type":"string"
            },
            "bankName":{
               "type":"string"
            },
            "couranteeCustomerReward":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "couranteeFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "debtOfLastWeek":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "dedicatedDeliveryAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "deductionAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "downloadableCoupon":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "finalAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "lastAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "pendingReleasedAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "revenueRecognitionDateFrom":{
               "type":"string"
            },
            "revenueRecognitionDateTo":{
               "type":"string"
            },
            "revenueRecognitionYearMonth":{
               "type":"string"
            },
            "sellerDiscountCoupon":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "sellerServiceFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "serviceFee":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "settlementAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "settlementDate":{
               "type":"string"
            },
            "settlementTargetAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "settlementType":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "storeFeeDiscount": {
               "type": "number",
               "x-cag-support-type": "java.math.BigDecimal"
            },
            "totalSale":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            }
         }
      },
      "CouponFailedVendorItemIdResponse":{
         "type":"object",
         "properties":{
            "failureReason":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ResponseOfDeleteCouponResponse":{
         "type":"object",
         "properties":{
            "body":{
               "$ref":"#/definitions/DeleteCouponResponse"
            },
            "errorCode":{
               "type":"string"
            },
            "errorMessage":{
               "type":"string"
            },
            "requestResultStatus":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "FAIL"
               ]
            }
         }
      },
      "ExpireCouponResponse":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "requestTransactionId":{
               "type":"string"
            }
         }
      },
      "PagedResponseOfCouponDetails":{
         "type":"object",
         "properties":{
            "content":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponDetails"
               }
            },
            "pagination":{
               "$ref":"#/definitions/Pagination"
            }
         }
      },
      "CouponTransactionStatusResponse":{
         "type":"object",
         "properties":{
            "couponFailedVendorItemIdResponses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponFailedVendorItemIdResponse"
               }
            },
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "failed":{
               "type":"integer",
               "format":"int64"
            },
            "requestedId":{
               "type":"string"
            },
            "status":{
               "type":"string"
            },
            "succeeded":{
               "type":"integer",
               "format":"int64"
            },
            "total":{
               "type":"integer",
               "format":"int64"
            },
            "type":{
               "type":"string"
            }
         }
      },
      "ExpireCoupon":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "reason":{
               "type":"string"
            },
            "userId":{
               "type":"string"
            }
         }
      },
      "Pagination":{
         "type":"object",
         "properties":{
            "countPerPage":{
               "type":"integer",
               "format":"int32"
            },
            "currentPage":{
               "type":"integer",
               "format":"int32"
            },
            "totalElements":{
               "type":"integer",
               "format":"int32"
            },
            "totalPages":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "CouponPolicy":{
         "type":"object",
         "properties":{
            "description":{
               "type":"string"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "maximumDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "maximumPerDay":{
               "type":"integer",
               "format":"int32"
            },
            "minimumPrice":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "title":{
               "type":"string"
            },
            "typeOfDiscount":{
               "type":"string",
               "enum":[
                  "RATE",
                  "PRICE",
                  "FIXED_WITH_QUANTITY"
               ]
            }
         }
      },
      "CouponPolicyResponse":{
         "type":"object",
         "properties":{
            "description":{
               "type":"string"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "manageCode":{
               "type":"string"
            },
            "maximumDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "maximumPerDaily":{
               "type":"integer",
               "format":"int32"
            },
            "minimumPrice":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "title":{
               "type":"string"
            },
            "typeOfDiscount":{
               "type":"string",
               "enum":[
                  "RATE",
                  "PRICE",
                  "FIXED_WITH_QUANTITY"
               ]
            }
         }
      },
      "CouponItemRequest":{
         "type":"object",
         "properties":{
            "couponItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponItem"
               }
            }
         }
      },
      "CouponItem":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "userId":{
               "type":"string"
            },
            "vendorItemIds":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "ExpireCouponRequest":{
         "type":"object",
         "properties":{
            "expireCouponList":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ExpireCoupon"
               }
            }
         }
      },
      "GetCouponResponse":{
         "type":"object",
         "properties":{
            "appliedOptionCount":{
               "type":"integer",
               "format":"int64"
            },
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "couponPolicies":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponPolicy"
               }
            },
            "couponStatus":{
               "type":"string",
               "enum":[
                  "STANDBY",
                  "APPLIED",
                  "DETACHED",
                  "PAUSED",
                  "PAUSING",
                  "EXPIRED",
                  "EXPIRING"
               ]
            },
            "couponType":{
               "type":"string",
               "enum":[
                  "INSTANCE",
                  "DOWNLOAD"
               ]
            },
            "endDate":{
               "type":"string"
            },
            "publishedDate":{
               "type":"string"
            },
            "startDate":{
               "type":"string"
            },
            "title":{
               "type":"string"
            },
            "usageAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            }
         }
      },
      "DeleteCouponRequest":{
         "type":"object",
         "properties":{
            "deleteCouponList":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DeleteCoupon"
               }
            }
         }
      },
      "TransactionStatusResponseOfCouponTransactionStatusResponse":{
         "type":"object",
         "properties":{
            "transactionStatusResponse":{
               "$ref":"#/definitions/CouponTransactionStatusResponse"
            }
         }
      },
      "DeleteCouponResponse":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ResponseOfCouponItemResponse":{
         "type":"object",
         "properties":{
            "body":{
               "$ref":"#/definitions/CouponItemResponse"
            },
            "errorCode":{
               "type":"string"
            },
            "errorMessage":{
               "type":"string"
            },
            "requestResultStatus":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "FAIL"
               ]
            }
         }
      },
      "CouponPolicyRequest":{
         "type":"object",
         "properties":{
            "description":{
               "type":"string"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "maximumDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "maximumPerDaily":{
               "type":"integer",
               "format":"int32"
            },
            "minimumPrice":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "title":{
               "type":"string"
            },
            "typeOfDiscount":{
               "type":"string",
               "enum":[
                  "RATE",
                  "PRICE",
                  "FIXED_WITH_QUANTITY"
               ]
            }
         }
      },
      "ResponseOfExpireCouponResponse":{
         "type":"object",
         "properties":{
            "body":{
               "$ref":"#/definitions/ExpireCouponResponse"
            },
            "errorCode":{
               "type":"string"
            },
            "errorMessage":{
               "type":"string"
            },
            "requestResultStatus":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "FAIL"
               ]
            }
         }
      },
      "CouponDetails":{
         "type":"object",
         "properties":{
            "appliedOptionCount":{
               "type":"integer",
               "format":"int64"
            },
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "couponStatus":{
               "type":"string",
               "enum":[
                  "STANDBY",
                  "APPLIED",
                  "DETACHED",
                  "PAUSED",
                  "PAUSING",
                  "EXPIRED",
                  "EXPIRING"
               ]
            },
            "couponType":{
               "type":"string",
               "enum":[
                  "INSTANCE",
                  "DOWNLOAD"
               ]
            },
            "description":{
               "type":"string"
            },
            "discount":{
               "type":"number",
               "format":"double"
            },
            "endDate":{
               "type":"string"
            },
            "manageCode":{
               "type":"string"
            },
            "maxDiscountPrice":{
               "type":"integer",
               "format":"int64"
            },
            "modifiedBy":{
               "type":"string"
            },
            "modifiedDate":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "policies":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponPolicy"
               }
            },
            "publishedDate":{
               "type":"string"
            },
            "sourceId":{
               "type":"integer",
               "format":"int64"
            },
            "startDate":{
               "type":"string"
            },
            "title":{
               "type":"string"
            },
            "usageAmount":{
               "type":"number",
               "x-cag-support-type":"java.math.BigDecimal"
            },
            "vendorId":{
               "type":"string"
            },
            "vfId":{
               "type":"string"
            }
         }
      },
      "CouponItemResponse":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "requestTransactionId":{
               "type":"string"
            }
         }
      },
      "CreateCouponResponse":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "couponPolicies":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponPolicyResponse"
               }
            },
            "couponStatus":{
               "type":"string",
               "enum":[
                  "STANDBY",
                  "APPLIED",
                  "DETACHED",
                  "PAUSED",
                  "PAUSING",
                  "EXPIRED",
                  "EXPIRING"
               ]
            },
            "couponType":{
               "type":"string",
               "enum":[
                  "INSTANCE",
                  "DOWNLOAD"
               ]
            },
            "lastModifiedBy":{
               "type":"string"
            },
            "lastModifiedDate":{
               "type":"string"
            },
            "publishedDate":{
               "type":"string"
            },
            "startDate":{
               "type":"string"
            },
            "title":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            }
         }
      },
      "DeleteCoupon":{
         "type":"object",
         "properties":{
            "couponId":{
               "type":"integer",
               "format":"int64"
            },
            "reason":{
               "type":"string"
            },
            "userId":{
               "type":"string"
            }
         }
      },
      "CreateCouponRequest":{
         "type":"object",
         "properties":{
            "contractId":{
               "type":"integer",
               "format":"int64"
            },
            "couponType":{
               "type":"string",
               "enum":[
                  "INSTANCE",
                  "DOWNLOAD"
               ]
            },
            "endDate":{
               "type":"string"
            },
            "policies":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CouponPolicyRequest"
               }
            },
            "startDate":{
               "type":"string"
            },
            "title":{
               "type":"string"
            },
            "userId":{
               "type":"string"
            }
         }
      },
      "ResponseDtoOfProductCashBackSearchResultDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/ProductCashBackSearchResultDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "ProductCashBackSearchResultDto":{
         "type":"object",
         "properties":{
            "disabled":{
               "type":"boolean"
            },
            "disabledAt":{
               "type":"string"
            },
            "endAt":{
               "type":"string"
            },
            "maxAmount":{
               "type":"integer",
               "format":"int64"
            },
            "ruleId":{
               "type":"integer",
               "format":"int64"
            },
            "startAt":{
               "type":"string"
            },
            "value":{
               "type":"integer",
               "format":"int64"
            },
            "valueType":{
               "type":"string"
            },
            "vendorId":{
               "type":"string"
            },
            "vendorItemId":{
               "type":"string"
            }
         }
      },
      "ProductCashBackInputDto":{
         "type":"object",
         "properties":{
            "endAt":{
               "type":"string"
            },
            "maxAmount":{
               "type":"string"
            },
            "ruleId":{
               "type":"string"
            },
            "startAt":{
               "type":"string"
            },
            "value":{
               "type":"string"
            },
            "valueType":{
               "type":"string"
            },
            "vendorItemIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "ResponseDtoOfProductCashBackOutputDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "$ref":"#/definitions/ProductCashBackOutputDto"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "ProductCashBackOutputDto":{
         "type":"object",
         "properties":{
            "failVendorItemIds":{
               "type":"array",
               "items":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"string"
                  },
                  "x-cag-map-key-type":"java.lang.String"
               }
            },
            "successVendorItemIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "DeliveryReqDto":{
         "type":"object",
         "properties":{
            "invoiceNumber":{
               "type":"string"
            },
            "shipmentBoxId":{
               "type":"integer",
               "format":"int64"
            }
         }
      },
      "ResponseDtoOfboolean":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"boolean"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "PagedResponseDtoWithPageIndexOfListOfReturnWithdrawDto":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "data":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ReturnWithdrawDto"
               }
            },
            "message":{
               "type":"string"
            },
            "nextPageIndex":{
               "type":"string"
            }
         }
      },
      "ReturnWithdrawDto": {
         "type": "object",
         "properties": {
            "cancelId": {
               "type": "integer",
               "format": "int64"
            },
            "createdAt": {
               "type": "string"
            },
            "orderId": {
               "type": "integer",
               "format": "int64"
            },
            "refundDeliveryDuty": {
               "type": "string"
            },
            "vendorId": {
               "type": "string"
            },
            "vendorItemIds": {
               "type": "array",
               "items": {
                  "type": "integer",
                  "format": "int64"
               }
            }
         }
      },
      "CancelRequestDtoV5":{
         "type":"object",
         "required":[
            "bigCancelCode",
            "middleCancelCode",
            "orderId",
            "receiptCounts",
            "userId",
            "vendorId",
            "vendorItemIds"
         ],
         "properties":{
            "bigCancelCode":{
               "type":"string",
               "description":"취소 사유 큰 카테고리 코드"
            },
            "middleCancelCode":{
               "type":"string",
               "description":"취소 사유 중간 카테고리 코드"
            },
            "orderId":{
               "type":"integer",
               "format":"int64",
               "description":"주문 ID"
            },
            "receiptCounts":{
               "type":"array",
               "description":"취소할 상품 개수",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "userId":{
               "type":"string",
               "description":"업체 윙 로그인 ID"
            },
            "vendorId":{
               "type":"string",
               "description":"업체 ID"
            },
            "vendorItemIds":{
               "type":"array",
               "description":"취소할 상품ID 리스트",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "ResponseDtoOfCancelApiResponseDtoV5":{
         "type":"object",
         "properties":{
            "code":{
               "type":"string"
            },
            "data":{
               "$ref":"#/definitions/CancelApiResponseDtoV5"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "CancelApiResponseDtoV5":{
         "type":"object",
         "properties":{
            "failedVendorItemIds":{
               "type":"array",
               "description":"취소 처리 실패한 상품 번호 리스트",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "orderId":{
               "type":"integer",
               "format":"int64",
               "description":"처리된 주문ID"
            },
            "receiptMap":{
               "type":"object",
               "description":"접수 아이디와 접수 상세 정보",
               "additionalProperties":{
                  "$ref":"#/definitions/CancelReceiptResponseV5"
               },
               "x-cag-map-key-type":"java.lang.Long"
            }
         }
      },
      "CancelReceiptResponseV5":{
         "type":"object",
         "properties":{
            "receiptId":{
               "type":"integer",
               "format":"int64",
               "description":"취소 접수 ID"
            },
            "receiptType":{
               "type":"string",
               "description":"취소 접수 타입, CANCEL: 즉시취소, STOP_SHIPMENT:출고정지완료"
            },
            "totalCount":{
               "type":"integer",
               "format":"int64",
               "description":"취소 된 총 상품개수"
            },
            "vendorItemIds":{
               "type":"array",
               "description":"취소된 상품번호 리스트",
               "items":{
                  "type":"integer",
                  "format":"int64"
               }
            }
         }
      },
      "CSCoupangConfirmCondition": {
         "type": "object",
         "properties": {
            "confirmBy": {
               "type": "string"
            }
         }
      }
   }
}